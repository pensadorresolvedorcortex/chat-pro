openapi: 3.0.3
info:
  title: Academia da Comunicação API
  version: 1.0.0
  description: |
    OpenAPI specification for the Academia da Comunicação platform.
    Provides REST endpoints under the `/qc/v1` namespace for managing
    educational content, assessments, challenges, subscriptions, and user progress.
  x-projectStatus:
    androidApkReadinessPercent: 100
    lastUpdated: 2025-10-06
    notes: >-
      APK Android homologado com Pix concluído. Flutter iOS, Strapi e Operações
      encontram-se em 100 % conforme docs/status/platform-readiness.md, mantendo
      paridade funcional entre plataformas.
externalDocs:
  description: Mega resumo para orientar geração via Codex
  url: ./mega-resumo-codex.md
servers:
  - url: https://api.academiadacomunicacao.com/qc/v1
    description: Production server
  - url: https://staging.api.academiadacomunicacao.com/qc/v1
    description: Staging server
  - url: http://localhost:1337/qc/v1
    description: Local development server (Strapi)
security:
  - bearerAuth: []
tags:
  - name: Saude
  - name: Catalogos
  - name: Questoes
  - name: Filtros
  - name: Cadernos
  - name: Simulados
  - name: Desafios
  - name: Metas
  - name: Mentorias
  - name: Agenda
  - name: Cursos
  - name: Dashboard
  - name: Assinaturas
  - name: Notificacoes
  - name: Biblioteca
  - name: Autenticacao
  - name: Usuarios
  - name: Comunidade
  - name: Suporte
  - name: Relatorios
  - name: Webhooks
  - name: Nps
  - name: Operacoes
paths:
  /health:
    get:
      tags: [Saude]
      summary: Verifica o estado operacional dos serviços dependentes.
      description: |
        Retorna o estado das integrações críticas do backend, incluindo banco de dados,
        Redis e Meilisearch, permitindo monitoramento automatizado do ambiente Strapi.
      operationId: getHealthStatus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Estados consolidados das dependências internas e externas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatusResponse'
              examples:
                default:
                  $ref: '#/components/examples/HealthStatusResponse'
        '401':
          description: Token inválido ou ausente.
  /auth/login:
    post:
      tags: [Autenticacao]
      summary: Realiza login com credenciais do painel ou app.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginInput'
            examples:
              default:
                $ref: '#/components/examples/AuthLoginInput'
      responses:
        '200':
          description: Login bem-sucedido retornando tokens de acesso e refresh.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponse'
              examples:
                default:
                  $ref: '#/components/examples/AuthLoginResponse'
        '401':
          description: Credenciais inválidas.
  /auth/refresh:
    post:
      tags: [Autenticacao]
      summary: Emite novo token de acesso a partir de refresh token válido.
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRefreshInput'
      responses:
        '200':
          description: Tokens atualizados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRefreshResponse'
              examples:
                default:
                  $ref: '#/components/examples/AuthRefreshResponse'
        '401':
          description: Refresh token expirado ou revogado.
  /dashboard/home:
    get:
      tags: [Dashboard]
      summary: Recupera o resumo consolidado para a home do app mobile.
      description: >-
        Retorna informações do usuário autenticado, atalhos rápidos, métricas da semana,
        destaques de alunos, planos Pix e assinaturas recentes, conteúdos em andamento,
        lives e notícias que abastecem o dashboard inicial do app.
      operationId: getDashboardHome
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Payload consolidado do dashboard, alinhado aos widgets do app Flutter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardHomeResponse'
              examples:
                default:
                  $ref: '#/components/examples/DashboardHomeResponse'
        '401':
          description: Token inválido ou ausente.
  /operations/readiness:
    get:
      tags: [Operacoes]
      summary: Consolida o progresso das frentes Flutter iOS, Strapi e operações.
      description: >-
        Retorna percentuais baseline e calculados, pendências priorizadas e contagens Pix para
        acompanhar a jornada rumo a 100 % de prontidão nas plataformas restantes.
      operationId: getOperationsReadiness
      responses:
        '200':
          description: Snapshot de prontidão operacional.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsReadinessSnapshot'
              examples:
                default:
                  externalValue: ./examples/operations_readiness.json
  /auth/logout:
    post:
      tags: [Autenticacao]
      summary: Revoga tokens ativos do usuário autenticado.
      operationId: logout
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLogoutInput'
      responses:
        '204':
          description: Logout realizado com sucesso.
  /catalogos:
    get:
      tags: [Catalogos]
      summary: Recupera catálogos de referência.
      operationId: listCatalogos
      description: |
        Retorna catálogos agregados contendo disciplinas, assuntos, bancas, cargos e concursos
        para alimentar filtros no app.
      responses:
        '200':
          description: Catálogos recuperados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogosResponse'
  /questoes:
    get:
      tags: [Questoes]
      summary: Lista questões com paginação e filtros.
      operationId: listQuestoes
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortParam'
        - name: disciplinaId
          in: query
          schema:
            type: string
        - name: assuntoIds
          in: query
          description: Lista de IDs de assuntos separados por vírgula.
          schema:
            type: string
        - name: bancaId
          in: query
          schema:
            type: string
        - name: concursoId
          in: query
          schema:
            type: string
        - name: dificuldade
          in: query
          schema:
            type: string
            enum: [facil, medio, dificil]
        - name: ano
          in: query
          schema:
            type: integer
        - name: tags
          in: query
          description: Tags separadas por vírgula.
          schema:
            type: string
      responses:
        '200':
          description: Lista paginada de questões.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestoes'
              examples:
                default:
                  $ref: '#/components/examples/QuestaoListaPaginada'
    post:
      tags: [Questoes]
      summary: Cria uma nova questão.
      operationId: createQuestao
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestaoInput'
            examples:
              default:
                $ref: '#/components/examples/QuestaoInputCreate'
      responses:
        '201':
          description: Questão criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questao'
              examples:
                default:
                  $ref: '#/components/examples/QuestaoDetalhada'
  /questoes/import:
    post:
      tags: [Questoes]
      summary: Importa questões em lote.
      operationId: importQuestoes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questoes:
                  type: array
                  items:
                    $ref: '#/components/schemas/QuestaoInput'
      responses:
        '202':
          description: Importação iniciada.
  /questoes/{id}:
    get:
      tags: [Questoes]
      summary: Recupera detalhes de uma questão.
      operationId: getQuestao
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Questão encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questao'
              examples:
                default:
                  $ref: '#/components/examples/QuestaoDetalhada'
    patch:
      tags: [Questoes]
      summary: Atualiza parcialmente uma questão.
      operationId: updateQuestao
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestaoUpdate'
            examples:
              default:
                $ref: '#/components/examples/QuestaoInputCreate'
      responses:
        '200':
          description: Questão atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questao'
              examples:
                default:
                  $ref: '#/components/examples/QuestaoDetalhada'
    delete:
      tags: [Questoes]
      summary: Remove uma questão.
      operationId: deleteQuestao
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Questão removida com sucesso.
  /filtros:
    get:
      tags: [Filtros]
      summary: Lista filtros salvos do usuário.
      operationId: listFiltros
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Lista de filtros salvos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFiltros'
    post:
      tags: [Filtros]
      summary: Cria um filtro salvo.
      operationId: createFiltro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FiltroSalvoInput'
      responses:
        '201':
          description: Filtro criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FiltroSalvo'
  /filtros/{id}:
    delete:
      tags: [Filtros]
      summary: Remove um filtro salvo.
      operationId: deleteFiltro
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Filtro removido.
  /cadernos:
    get:
      tags: [Cadernos]
      summary: Lista cadernos do usuário.
      operationId: listCadernos
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Lista de cadernos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCadernos'
              examples:
                default:
                  $ref: '#/components/examples/CadernoListaPaginada'
    post:
      tags: [Cadernos]
      summary: Cria um novo caderno.
      operationId: createCaderno
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadernoInput'
            examples:
              default:
                $ref: '#/components/examples/CadernoInputOffline'
      responses:
        '201':
          description: Caderno criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caderno'
              examples:
                default:
                  $ref: '#/components/examples/CadernoOfflineFavoritos'
  /cadernos/{id}:
    get:
      tags: [Cadernos]
      summary: Recupera um caderno específico.
      operationId: getCaderno
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Caderno recuperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caderno'
              examples:
                default:
                  $ref: '#/components/examples/CadernoOfflineFavoritos'
    patch:
      tags: [Cadernos]
      summary: Atualiza um caderno.
      operationId: updateCaderno
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadernoUpdate'
            examples:
              default:
                $ref: '#/components/examples/CadernoInputOffline'
      responses:
        '200':
          description: Caderno atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caderno'
              examples:
                default:
                  $ref: '#/components/examples/CadernoOfflineFavoritos'
    delete:
      tags: [Cadernos]
      summary: Remove um caderno.
      operationId: deleteCaderno
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Caderno removido.
  /simulados:
    get:
      tags: [Simulados]
      summary: Lista simulados do usuário.
      operationId: listSimulados
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Lista de simulados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSimulados'
              examples:
                default:
                  $ref: '#/components/examples/SimuladoListaPaginada'
    post:
      tags: [Simulados]
      summary: Cria um simulado personalizado.
      operationId: createSimulado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimuladoInput'
            examples:
              default:
                $ref: '#/components/examples/SimuladoInputExpress'
      responses:
        '201':
          description: Simulado criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulado'
              examples:
                default:
                  $ref: '#/components/examples/SimuladoExpressAtivo'
  /simulados/gerar:
    post:
      tags: [Simulados]
      summary: Gera um simulado express automaticamente.
      operationId: generateSimuladoExpress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimuladoExpressRequest'
      responses:
        '201':
          description: Simulado gerado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulado'
              examples:
                default:
                  $ref: '#/components/examples/SimuladoExpressAtivo'
  /simulados/{id}:
    get:
      tags: [Simulados]
      summary: Recupera detalhes do simulado.
      operationId: getSimulado
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Simulado recuperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulado'
              examples:
                default:
                  $ref: '#/components/examples/SimuladoExpressAtivo'
    patch:
      tags: [Simulados]
      summary: Atualiza metadados do simulado.
      operationId: updateSimulado
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimuladoUpdate'
            examples:
              default:
                $ref: '#/components/examples/SimuladoInputExpress'
      responses:
        '200':
          description: Simulado atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Simulado'
              examples:
                default:
                  $ref: '#/components/examples/SimuladoExpressAtivo'
    delete:
      tags: [Simulados]
      summary: Remove um simulado.
      operationId: deleteSimulado
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Simulado removido.
  /simulados/{id}/responder:
    post:
      tags: [Simulados]
      summary: Envia respostas de um simulado.
      operationId: submitSimuladoResposta
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimuladoRespostaInput'
      responses:
        '200':
          description: Respostas processadas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimuladoResultado'
              examples:
                default:
                  $ref: '#/components/examples/SimuladoResultadoPosProva'
  /desafios:
    get:
      tags: [Desafios]
      summary: Lista desafios disponíveis.
      operationId: listDesafios
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Lista de desafios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDesafios'
              examples:
                default:
                  $ref: '#/components/examples/DesafioListaPaginada'
    post:
      tags: [Desafios]
      summary: Cria um novo desafio.
      operationId: createDesafio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesafioInput'
            examples:
              default:
                $ref: '#/components/examples/DesafioInputGamificado'
      responses:
        '201':
          description: Desafio criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desafio'
              examples:
                default:
                  $ref: '#/components/examples/DesafioGamificadoAtivo'
  /desafios/{id}:
    get:
      tags: [Desafios]
      summary: Recupera detalhes de um desafio.
      operationId: getDesafio
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Desafio recuperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desafio'
              examples:
                default:
                  $ref: '#/components/examples/DesafioGamificadoAtivo'
    patch:
      tags: [Desafios]
      summary: Atualiza dados do desafio.
      operationId: updateDesafio
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesafioUpdate'
            examples:
              default:
                $ref: '#/components/examples/DesafioInputGamificado'
      responses:
        '200':
          description: Desafio atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desafio'
              examples:
                default:
                  $ref: '#/components/examples/DesafioGamificadoAtivo'
    delete:
      tags: [Desafios]
      summary: Remove um desafio.
      operationId: deleteDesafio
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Desafio removido.
  /desafios/{id}/ranking:
    get:
      tags: [Desafios]
      summary: Obtém ranking do desafio.
      operationId: getDesafioRanking
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Ranking retornado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesafioRanking'
              examples:
                default:
                  $ref: '#/components/examples/DesafioRankingAtualizado'
  /metas:
    get:
      tags: [Metas]
      summary: Lista metas de estudo do usuário.
      operationId: listMetas
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Lista de metas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetas'
              examples:
                default:
                  $ref: '#/components/examples/MetaListaPaginada'
    post:
      tags: [Metas]
      summary: Cria uma meta de estudo.
      operationId: createMeta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaEstudoInput'
            examples:
              default:
                $ref: '#/components/examples/MetaInputGamificada'
      responses:
        '201':
          description: Meta criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaEstudo'
              examples:
                default:
                  $ref: '#/components/examples/MetaEstudosGamificada'
  /metas/{id}:
    get:
      tags: [Metas]
      summary: Recupera detalhes de uma meta.
      operationId: getMeta
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Meta recuperada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaEstudo'
              examples:
                default:
                  $ref: '#/components/examples/MetaEstudosGamificada'
    patch:
      tags: [Metas]
      summary: Atualiza uma meta.
      operationId: updateMeta
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaEstudoUpdate'
            examples:
              default:
                $ref: '#/components/examples/MetaInputGamificada'
      responses:
        '200':
          description: Meta atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaEstudo'
              examples:
                default:
                  $ref: '#/components/examples/MetaEstudosGamificada'
    delete:
      tags: [Metas]
      summary: Remove uma meta.
      operationId: deleteMeta
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Meta removida.
  /mentorias:
    get:
      tags: [Mentorias]
      summary: Lista mentorias guiadas disponíveis.
      operationId: listMentorias
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: mentorId
          in: query
          schema:
            type: string
          description: Filtra mentorias por mentor responsável.
        - name: status
          in: query
          schema:
            type: string
            enum: [rascunho, publicada, arquivada]
          description: Filtra mentorias por status de publicação.
      responses:
        '200':
          description: Lista paginada de mentorias.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMentorias'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaListaPaginada'
    post:
      tags: [Mentorias]
      summary: Cria uma nova mentoria guiada.
      operationId: createMentoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoriaInput'
            examples:
              default:
                $ref: '#/components/examples/MentoriaInputCriacao'
      responses:
        '201':
          description: Mentoria criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentoria'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaDetalhada'
  /mentorias/{id}:
    get:
      tags: [Mentorias]
      summary: Recupera detalhes de uma mentoria específica.
      operationId: getMentoria
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Mentoria recuperada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentoria'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaDetalhada'
    patch:
      tags: [Mentorias]
      summary: Atualiza campos de uma mentoria.
      operationId: updateMentoria
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoriaUpdate'
            examples:
              default:
                $ref: '#/components/examples/MentoriaInputCriacao'
      responses:
        '200':
          description: Mentoria atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mentoria'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaDetalhada'
    delete:
      tags: [Mentorias]
      summary: Arquiva uma mentoria.
      operationId: deleteMentoria
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Mentoria arquivada.
  /mentorias/{id}/slots:
    get:
      tags: [Mentorias]
      summary: Lista disponibilidade de horários da mentoria.
      operationId: listMentoriaSlots
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Slots cadastrados para a mentoria.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MentoriaSlot'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaSlotsDisponiveis'
    post:
      tags: [Mentorias]
      summary: Cadastra um novo slot de mentoria.
      operationId: createMentoriaSlot
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoriaSlotInput'
            examples:
              default:
                $ref: '#/components/examples/MentoriaSlotInput'
      responses:
        '201':
          description: Slot criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentoriaSlot'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaSlotAtualizado'
  /mentorias/{id}/slots/{slotId}:
    patch:
      tags: [Mentorias]
      summary: Atualiza status ou capacidade de um slot.
      operationId: updateMentoriaSlot
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/MentoriaSlotIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoriaSlotUpdate'
            examples:
              default:
                $ref: '#/components/examples/MentoriaSlotAtualizado'
      responses:
        '200':
          description: Slot atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentoriaSlot'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaSlotAtualizado'
    delete:
      tags: [Mentorias]
      summary: Remove um slot da mentoria.
      operationId: deleteMentoriaSlot
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/MentoriaSlotIdParam'
      responses:
        '204':
          description: Slot removido.
  /mentorias/{id}/agendamentos:
    get:
      tags: [Mentorias]
      summary: Lista agendamentos confirmados para a mentoria.
      operationId: listMentoriaAgendamentos
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [pendente, confirmado, concluido, cancelado]
          description: Filtra agendamentos por status atual.
      responses:
        '200':
          description: Agendamentos retornados.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MentoriaAgendamento'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaAgendamentosLista'
    post:
      tags: [Mentorias]
      summary: Reserva um slot da mentoria para um aluno.
      operationId: createMentoriaAgendamento
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoriaAgendamentoInput'
            examples:
              default:
                $ref: '#/components/examples/MentoriaAgendamentoInput'
      responses:
        '201':
          description: Agendamento criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentoriaAgendamento'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaAgendamentoConfirmado'
  /mentorias/{id}/agendamentos/{agendamentoId}:
    patch:
      tags: [Mentorias]
      summary: Atualiza status de um agendamento.
      operationId: updateMentoriaAgendamento
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/MentoriaAgendamentoIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MentoriaAgendamentoUpdate'
            examples:
              default:
                $ref: '#/components/examples/MentoriaAgendamentoConfirmado'
      responses:
        '200':
          description: Agendamento atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MentoriaAgendamento'
              examples:
                default:
                  $ref: '#/components/examples/MentoriaAgendamentoConfirmado'
    delete:
      tags: [Mentorias]
      summary: Cancela um agendamento da mentoria.
      operationId: deleteMentoriaAgendamento
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/MentoriaAgendamentoIdParam'
      responses:
        '204':
          description: Agendamento cancelado.
  /agenda/lives:
    get:
      tags: [Agenda]
      summary: Lista lives e eventos síncronos agendados.
      operationId: listLives
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: periodo
          in: query
          schema:
            type: string
          description: Intervalo temporal filtrado (ex. `2024-06`).
        - name: status
          in: query
          schema:
            type: string
            enum: [rascunho, publicado, encerrado]
      responses:
        '200':
          description: Lista paginada de lives.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLives'
              examples:
                default:
                  $ref: '#/components/examples/AgendaLivesLista'
    post:
      tags: [Agenda]
      summary: Cria um novo evento ao vivo.
      operationId: createLive
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveEventoInput'
            examples:
              default:
                $ref: '#/components/examples/LiveEventoInput'
      responses:
        '201':
          description: Live criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvento'
              examples:
                default:
                  $ref: '#/components/examples/LiveEventoDetalhe'
  /agenda/lives/{id}:
    get:
      tags: [Agenda]
      summary: Recupera detalhes de uma live específica.
      operationId: getLive
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Live retornada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvento'
              examples:
                default:
                  $ref: '#/components/examples/LiveEventoDetalhe'
    patch:
      tags: [Agenda]
      summary: Atualiza uma live existente.
      operationId: updateLive
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveEventoUpdate'
            examples:
              default:
                $ref: '#/components/examples/LiveEventoInput'
      responses:
        '200':
          description: Live atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveEvento'
              examples:
                default:
                  $ref: '#/components/examples/LiveEventoDetalhe'
    delete:
      tags: [Agenda]
      summary: Remove uma live da agenda.
      operationId: deleteLive
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Live removida.
  /agenda/lives/{id}/inscricoes:
    get:
      tags: [Agenda]
      summary: Lista inscrições de usuários para a live.
      operationId: listLiveInscricoes
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Inscrições retornadas.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LiveInscricao'
              examples:
                default:
                  $ref: '#/components/examples/LiveInscricoesLista'
    post:
      tags: [Agenda]
      summary: Registra inscrição de um usuário.
      operationId: createLiveInscricao
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveInscricaoInput'
            examples:
              default:
                $ref: '#/components/examples/LiveInscricaoInput'
      responses:
        '201':
          description: Inscrição confirmada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveInscricao'
              examples:
                default:
                  $ref: '#/components/examples/LiveInscricaoConfirmada'
  /agenda/lives/{id}/inscricoes/{inscricaoId}:
    patch:
      tags: [Agenda]
      summary: Atualiza status de inscrição em uma live.
      operationId: updateLiveInscricao
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/LiveInscricaoIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveInscricaoUpdate'
            examples:
              default:
                $ref: '#/components/examples/LiveInscricaoConfirmada'
      responses:
        '200':
          description: Inscrição atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveInscricao'
              examples:
                default:
                  $ref: '#/components/examples/LiveInscricaoConfirmada'
    delete:
      tags: [Agenda]
      summary: Cancela inscrição na live.
      operationId: deleteLiveInscricao
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/LiveInscricaoIdParam'
      responses:
        '204':
          description: Inscrição cancelada.
  /cursos:
    get:
      tags: [Cursos]
      summary: Lista cursos disponíveis.
      operationId: listCursos
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: busca
          in: query
          schema:
            type: string
        - name: tags
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de cursos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCursos'
    post:
      tags: [Cursos]
      summary: Cria um curso.
      operationId: createCurso
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoInput'
      responses:
        '201':
          description: Curso criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
  /cursos/{id}:
    get:
      tags: [Cursos]
      summary: Recupera detalhes de um curso.
      operationId: getCurso
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Curso recuperado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
    patch:
      tags: [Cursos]
      summary: Atualiza um curso.
      operationId: updateCurso
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CursoUpdate'
      responses:
        '200':
          description: Curso atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
    delete:
      tags: [Cursos]
      summary: Remove um curso.
      operationId: deleteCurso
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Curso removido.
  /cursos/{id}/aulas:
    get:
      tags: [Cursos]
      summary: Lista aulas de um curso.
      operationId: listAulasDoCurso
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Lista de aulas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAulas'
    post:
      tags: [Cursos]
      summary: Adiciona uma aula ao curso.
      operationId: createAulaNoCurso
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AulaInput'
      responses:
        '201':
          description: Aula criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aula'
  /cursos/{id}/aulas/{aulaId}:
    patch:
      tags: [Cursos]
      summary: Atualiza uma aula.
      operationId: updateAulaNoCurso
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - name: aulaId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AulaUpdate'
      responses:
        '200':
          description: Aula atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aula'
    delete:
      tags: [Cursos]
      summary: Remove uma aula.
      operationId: deleteAulaNoCurso
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - name: aulaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Aula removida.
  /planos:
    get:
      tags: [Assinaturas]
      summary: Lista planos de assinatura disponíveis.
      operationId: listPlanos
      description: |-
        Retorna planos pagos ativos e Planos Grátis para Alunos. É possível filtrar
        por tipo e status de aprovação para que o time administrativo acompanhe o
        fluxo de liberações do super admin.
      parameters:
        - name: tipo
          in: query
          schema:
            type: string
            enum: [pago, gratis_aluno]
        - name: statusAprovacao
          in: query
          schema:
            type: string
            enum: [pendente, aprovado, rejeitado]
      responses:
        '200':
          description: Lista de planos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plano'
              examples:
                default:
                  $ref: '#/components/examples/PlanosDisponiveis'
    post:
      tags: [Assinaturas]
      summary: Cria um plano de assinatura.
      operationId: createPlano
      description: |-
        Cria um plano pago tradicional ou um Plano Grátis para Alunos. Planos
        gratuitos entram automaticamente como `pendente` e requerem aprovação do
        super admin antes de serem exibidos no app.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanoInput'
            examples:
              PlanoPago:
                $ref: '#/components/examples/PlanoPagoInput'
              PlanoGratisAluno:
                $ref: '#/components/examples/PlanoGratisAlunoInput'
      responses:
        '201':
          description: Plano criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plano'
              examples:
                PlanoPago:
                  $ref: '#/components/examples/PlanoPagoCriado'
                PlanoGratisAluno:
                  $ref: '#/components/examples/PlanoGratisAlunoCriado'
  /planos/{id}:
    patch:
      tags: [Assinaturas]
      summary: Atualiza um plano de assinatura.
      operationId: updatePlano
      description: |-
        Permite edições realizadas pelo dashboard, incluindo ajustes de preço,
        benefícios e periodicidade. Alterações em Planos Grátis para Alunos não
        modificam automaticamente o status de aprovação.
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanoUpdate'
            examples:
              AjustePreco:
                $ref: '#/components/examples/PlanoAtualizacaoPreco'
      responses:
        '200':
          description: Plano atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plano'
              examples:
                PlanoPagoAtualizado:
                  $ref: '#/components/examples/PlanoPagoCriado'
    delete:
      tags: [Assinaturas]
      summary: Remove um plano de assinatura.
      operationId: deletePlano
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Plano removido.
  /planos/{id}/aprovar:
    post:
      tags: [Assinaturas]
      summary: Aprova um Plano Grátis para Alunos.
      operationId: approvePlanoGratis
      description: |-
        Ação exclusiva do super admin para liberar Planos Grátis para Alunos após
        revisão. Atualiza o status de aprovação para `aprovado` e registra o
        responsável.
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Plano aprovado e pronto para publicação.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plano'
              examples:
                PlanoGratisAlunoAprovado:
                  $ref: '#/components/examples/PlanoGratisAlunoAprovado'
        '409':
          description: Plano já aprovado ou não elegível para aprovação gratuita.
  /planos/dashboard:
    get:
      tags: [Assinaturas]
      summary: Consolida indicadores para o dashboard de planos.
      operationId: getPlanosDashboardResumo
      description: |-
        Reúne métricas de planos pagos e Planos Grátis para Alunos, incluindo
        histórico de preços e alterações recentes, para alimentar o painel de
        edições administrativas.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Resumo consolidado de planos para o dashboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanosDashboardResumo'
              examples:
                default:
                  $ref: '#/components/examples/PlanosDashboardResumo'
  /planos/{id}/preco:
    patch:
      tags: [Assinaturas]
      summary: Atualiza exclusivamente o preço de um plano.
      operationId: updatePlanoPreco
      description: |-
        Permite ajustes rápidos de preço realizados pelo dashboard, registrando
        quem realizou a alteração e mantendo o histórico para auditoria.
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanoPrecoUpdateInput'
            examples:
              default:
                $ref: '#/components/examples/PlanoPrecoUpdateInput'
      responses:
        '200':
          description: Plano atualizado com novo preço.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plano'
              examples:
                default:
                  $ref: '#/components/examples/PlanoPagoAtualizadoPreco'
  /assinaturas/minha:
    get:
      tags: [Assinaturas]
      summary: Recupera a assinatura ativa do usuário.
      operationId: getMinhaAssinatura
      responses:
        '200':
          description: Assinatura encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assinatura'
    post:
      tags: [Assinaturas]
      summary: Ativa ou atualiza a assinatura do usuário.
      operationId: createOuAtualizaMinhaAssinatura
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssinaturaInput'
      responses:
        '200':
          description: Assinatura ativada/atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assinatura'
    delete:
      tags: [Assinaturas]
      summary: Cancela a assinatura do usuário.
      operationId: cancelMinhaAssinatura
      responses:
        '204':
          description: Assinatura cancelada.
  /assinaturas/pix/cobrancas:
    post:
      tags: [Assinaturas]
      summary: Gera uma cobrança Pix para assinatura.
      operationId: gerarCobrancaPixAssinatura
      description: |-
        Emite uma cobrança Pix imediata para o plano escolhido retornando o código copia e
        cola, imagem/URL do QR Code e vencimento. A cobrança pode ser consultada
        posteriormente para sincronizar o status entre app e CMS.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCobrancaInput'
            examples:
              default:
                $ref: '#/components/examples/PixCobrancaInput'
      responses:
        '201':
          description: Cobrança Pix gerada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobranca'
              examples:
                default:
                  $ref: '#/components/examples/PixCobrancaPendente'
  /assinaturas/pix/cobrancas/{cobrancaId}:
    get:
      tags: [Assinaturas]
      summary: Consulta status da cobrança Pix da assinatura.
      operationId: getCobrancaPixAssinatura
      parameters:
        - name: cobrancaId
          in: path
          required: true
          schema:
            type: string
          description: Identificador retornado na geração da cobrança Pix.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cobrança localizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobranca'
              examples:
                default:
                  $ref: '#/components/examples/PixCobrancaPago'
                expirado:
                  $ref: '#/components/examples/PixCobrancaExpirada'
  /assinaturas/pix/cobrancas/{cobrancaId}/status:
    patch:
      tags: [Assinaturas]
      summary: Atualiza o status manual de uma cobrança Pix.
      operationId: atualizarStatusCobrancaPix
      parameters:
        - name: cobrancaId
          in: path
          required: true
          schema:
            type: string
          description: Identificador numérico ou Txid da cobrança Pix.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCobrancaStatusUpdate'
      responses:
        '200':
          description: Status atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobranca'
  /assinaturas/pix/chave-principal:
    get:
      tags: [Assinaturas]
      summary: Recupera a chave Pix principal utilizada nas cobranças.
      operationId: getChavePixPrincipal
      description: >-
        Retorna a chave Pix oficial da Academia da Comunicação acompanhada do código
        copia e cola pronto para uso e do QR Code em Base64 para exibição imediata no
        app ou no dashboard.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Chave Pix principal retornada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixChavePrincipal'
              examples:
                default:
                  $ref: '#/components/examples/PixChavePrincipal'
  /assinaturas:
    get:
      tags: [Assinaturas]
      summary: Lista assinaturas gerenciadas (admin).
      operationId: listAssinaturas
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Lista de assinaturas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssinaturas'
              examples:
                default:
                  $ref: '#/components/examples/AssinaturasListaAdmin'
  /notificacoes/enviar:
    post:
      tags: [Notificacoes]
      summary: Agenda ou envia notificações e pesquisas NPS.
      operationId: enviarNotificacao
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificacaoInput'
      responses:
        '202':
          description: Notificação agendada ou enviada.
  /biblioteca/materiais:
    get:
      tags: [Biblioteca]
      summary: Lista materiais complementares com filtros contextuais.
      operationId: listMateriaisBiblioteca
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: formato
          in: query
          schema:
            type: string
            enum: [pdf, video, audio, checklist, modelo]
        - name: disciplinaId
          in: query
          schema:
            type: string
        - name: destaque
          in: query
          schema:
            type: boolean
        - name: tag
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Materiais recuperados com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMateriaisBiblioteca'
              examples:
                default:
                  $ref: '#/components/examples/BibliotecaMateriaisLista'
    post:
      tags: [Biblioteca]
      summary: Cadastra novo material complementar na biblioteca.
      operationId: createMaterialBiblioteca
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBibliotecaInput'
            examples:
              default:
                $ref: '#/components/examples/MaterialBibliotecaInput'
      responses:
        '201':
          description: Material criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBiblioteca'
              examples:
                default:
                  $ref: '#/components/examples/MaterialBibliotecaDetalhe'
  /biblioteca/materiais/{id}:
    get:
      tags: [Biblioteca]
      summary: Recupera detalhes do material complementar.
      operationId: getMaterialBiblioteca
      parameters:
        - $ref: '#/components/parameters/MaterialBibliotecaIdParam'
      responses:
        '200':
          description: Material localizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBiblioteca'
              examples:
                default:
                  $ref: '#/components/examples/MaterialBibliotecaDetalhe'
    patch:
      tags: [Biblioteca]
      summary: Atualiza metadados ou arquivos do material.
      operationId: updateMaterialBiblioteca
      parameters:
        - $ref: '#/components/parameters/MaterialBibliotecaIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialBibliotecaUpdate'
            examples:
              default:
                $ref: '#/components/examples/MaterialBibliotecaAtualizacao'
      responses:
        '200':
          description: Material atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBiblioteca'
              examples:
                default:
                  $ref: '#/components/examples/MaterialBibliotecaDetalhe'
    delete:
      tags: [Biblioteca]
      summary: Arquiva ou remove material da biblioteca.
      operationId: deleteMaterialBiblioteca
      parameters:
        - $ref: '#/components/parameters/MaterialBibliotecaIdParam'
      responses:
        '204':
          description: Material removido.
  /nps/pesquisas:
    get:
      tags: [Nps]
      summary: Lista pesquisas NPS configuradas no CMS.
      operationId: listPesquisasNps
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          description: Filtra pesquisas pelo status atual.
          schema:
            type: string
            enum: [rascunho, agendada, ativa, encerrada]
        - name: contexto
          in: query
          description: "Identifica o fluxo onde a pesquisa é exibida (ex.: onboarding, dashboard, planos)."
          schema:
            type: string
      responses:
        '200':
          description: Lista de pesquisas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPesquisasNps'
              examples:
                default:
                  $ref: '#/components/examples/NpsPesquisasLista'
    post:
      tags: [Nps]
      summary: Cria nova pesquisa NPS.
      operationId: createPesquisaNps
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NpsPesquisaInput'
            examples:
              default:
                $ref: '#/components/examples/NpsPesquisaCreate'
      responses:
        '201':
          description: Pesquisa criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpsPesquisa'
  /nps/pesquisas/{id}:
    get:
      tags: [Nps]
      summary: Recupera detalhes da pesquisa.
      operationId: getPesquisaNps
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Pesquisa encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpsPesquisa'
              examples:
                default:
                  $ref: '#/components/examples/NpsPesquisaDetalhe'
    patch:
      tags: [Nps]
      summary: Atualiza perguntas, janelas ou status da pesquisa.
      operationId: updatePesquisaNps
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NpsPesquisaUpdate'
            examples:
              default:
                $ref: '#/components/examples/NpsPesquisaUpdate'
      responses:
        '200':
          description: Pesquisa atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpsPesquisa'
    delete:
      tags: [Nps]
      summary: Arquiva uma pesquisa NPS.
      operationId: deletePesquisaNps
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Pesquisa removida.
  /nps/pesquisas/{id}/respostas:
    get:
      tags: [Nps]
      summary: Lista respostas coletadas para a pesquisa.
      operationId: listRespostasNps
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: nota
          in: query
          description: Filtra respostas por nota atribuída.
          schema:
            type: integer
            minimum: 0
            maximum: 10
      responses:
        '200':
          description: Respostas retornadas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRespostasNps'
              examples:
                default:
                  $ref: '#/components/examples/NpsRespostasLista'
  /nps/pesquisas/{id}/responder:
    post:
      tags: [Nps]
      summary: Submete resposta autenticada à pesquisa ativa.
      operationId: submitRespostaNps
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NpsRespostaInput'
            examples:
              default:
                $ref: '#/components/examples/NpsRespostaSubmit'
      responses:
        '201':
          description: Resposta registrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpsResposta'
              examples:
                default:
                  $ref: '#/components/examples/NpsRespostaSubmitResponse'
  /nps/painel/resumo:
    get:
      tags: [Nps]
      summary: Consolida KPIs de NPS para o dashboard.
      operationId: getPainelNpsResumo
      parameters:
        - name: periodo
          in: query
          description: "Recorte temporal (ex.: 7d, 30d, 90d)."
          schema:
            type: string
        - name: contexto
          in: query
          description: Filtra KPIs por contexto de pesquisa.
          schema:
            type: string
      responses:
        '200':
          description: Indicadores consolidados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NpsPainelResumo'
              examples:
                default:
                  $ref: '#/components/examples/NpsPainelResumo'
  /comunidade/perguntas:
    get:
      tags: [Comunidade]
      summary: Lista perguntas da comunidade com indicadores de engajamento.
      operationId: listPerguntasComunidade
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: busca
          in: query
          description: Termo aplicado ao título, corpo ou tags.
          schema:
            type: string
        - name: disciplinaId
          in: query
          schema:
            type: string
        - name: tag
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [publicada, rascunho, arquivada]
      responses:
        '200':
          description: Perguntas recuperadas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPerguntasComunidade'
              examples:
                default:
                  $ref: '#/components/examples/ComunidadePerguntasLista'
    post:
      tags: [Comunidade]
      summary: Cria uma nova pergunta na comunidade.
      operationId: createPerguntaComunidade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerguntaComunidadeInput'
            examples:
              default:
                $ref: '#/components/examples/ComunidadePerguntaCreate'
      responses:
        '201':
          description: Pergunta criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerguntaComunidade'
              examples:
                default:
                  $ref: '#/components/examples/ComunidadePerguntaDetalhada'
  /comunidade/perguntas/{id}:
    get:
      tags: [Comunidade]
      summary: Recupera detalhes de uma pergunta da comunidade.
      operationId: getPerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Pergunta recuperada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerguntaComunidade'
              examples:
                default:
                  $ref: '#/components/examples/ComunidadePerguntaDetalhada'
    patch:
      tags: [Comunidade]
      summary: Atualiza conteúdo ou moderação da pergunta.
      operationId: updatePerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerguntaComunidadeUpdate'
            examples:
              default:
                $ref: '#/components/examples/ComunidadePerguntaUpdate'
      responses:
        '200':
          description: Pergunta atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerguntaComunidade'
              examples:
                default:
                  $ref: '#/components/examples/ComunidadePerguntaDetalhada'
    delete:
      tags: [Comunidade]
      summary: Arquiva uma pergunta da comunidade.
      operationId: deletePerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Pergunta removida.
  /comunidade/perguntas/{id}/respostas:
    get:
      tags: [Comunidade]
      summary: Lista respostas vinculadas à pergunta.
      operationId: listRespostasPerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: Respostas retornadas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRespostasComunidade'
              examples:
                default:
                  $ref: '#/components/examples/ComunidadeRespostasLista'
    post:
      tags: [Comunidade]
      summary: Adiciona uma resposta à pergunta.
      operationId: createRespostaPerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespostaComunidadeInput'
            examples:
              default:
                $ref: '#/components/examples/ComunidadeRespostaCreate'
      responses:
        '201':
          description: Resposta criada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespostaComunidade'
              examples:
                default:
                  $ref: '#/components/examples/ComunidadeRespostaDetalhada'
  /comunidade/perguntas/{id}/respostas/{respostaId}:
    patch:
      tags: [Comunidade]
      summary: Atualiza uma resposta específica.
      operationId: updateRespostaPerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - name: respostaId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespostaComunidadeUpdate'
            examples:
              default:
                $ref: '#/components/examples/ComunidadeRespostaUpdate'
      responses:
        '200':
          description: Resposta atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RespostaComunidade'
              examples:
                default:
                  $ref: '#/components/examples/ComunidadeRespostaDetalhada'
    delete:
      tags: [Comunidade]
      summary: Remove uma resposta da pergunta.
      operationId: deleteRespostaPerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
        - name: respostaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Resposta removida.
  /comunidade/perguntas/{id}/curtidas:
    post:
      tags: [Comunidade]
      summary: Registra uma curtida na pergunta.
      operationId: likePerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Curtida registrada.
    delete:
      tags: [Comunidade]
      summary: Remove a curtida do usuário na pergunta.
      operationId: unlikePerguntaComunidade
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '204':
          description: Curtida removida.
  /suporte/tickets:
    get:
      tags: [Suporte]
      summary: Lista tickets de suporte criados via app e CMS.
      operationId: listTicketsSuporte
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [aberto, em_andamento, resolvido, arquivado]
        - name: categoria
          in: query
          schema:
            type: string
        - name: prioridade
          in: query
          schema:
            type: string
            enum: [baixa, media, alta, critica]
      responses:
        '200':
          description: Tickets retornados.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketsSuporte'
              examples:
                default:
                  $ref: '#/components/examples/SuporteTicketsLista'
    post:
      tags: [Suporte]
      summary: Abre um novo ticket de suporte.
      operationId: createTicketSuporte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketSuporteInput'
            examples:
              default:
                $ref: '#/components/examples/SuporteTicketCreate'
      responses:
        '201':
          description: Ticket criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketSuporte'
              examples:
                default:
                  $ref: '#/components/examples/SuporteTicketAberto'
  /suporte/tickets/{id}:
    get:
      tags: [Suporte]
      summary: Recupera detalhes de um ticket.
      operationId: getTicketSuporte
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Ticket encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketSuporte'
              examples:
                default:
                  $ref: '#/components/examples/SuporteTicketAberto'
    patch:
      tags: [Suporte]
      summary: Atualiza status ou encaminhamento do ticket.
      operationId: updateTicketSuporte
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketSuporteUpdate'
            examples:
              default:
                $ref: '#/components/examples/SuporteTicketUpdate'
      responses:
        '200':
          description: Ticket atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketSuporte'
              examples:
                default:
                  $ref: '#/components/examples/SuporteTicketAberto'
  /suporte/tickets/{id}/interacoes:
    get:
      tags: [Suporte]
      summary: Retorna a linha do tempo de interações do ticket.
      operationId: listInteracoesTicketSuporte
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      responses:
        '200':
          description: Interações do ticket.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketInteracao'
              examples:
                default:
                  $ref: '#/components/examples/SuporteTicketTimeline'
    post:
      tags: [Suporte]
      summary: Adiciona uma nova interação ao ticket.
      operationId: createInteracaoTicketSuporte
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketInteracaoInput'
            examples:
              default:
                $ref: '#/components/examples/SuporteInteracaoCreate'
      responses:
        '201':
          description: Interação registrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketInteracao'
              examples:
                default:
                  $ref: '#/components/examples/SuporteInteracaoRegistro'
  /usuarios:
    get:
      tags: [Usuarios]
      summary: Lista usuários do ecossistema com filtros administrativos.
      operationId: listUsuarios
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortParam'
        - name: papel
          in: query
          description: Filtra por papel primário do usuário.
          schema:
            type: string
            enum: [aluno, tutor, editor, admin, suporte]
        - name: status
          in: query
          description: Filtra por status ativo/inativo.
          schema:
            type: string
            enum: [ativo, inativo]
        - name: busca
          in: query
          description: Termo livre aplicado a nome, email ou documento.
          schema:
            type: string
      responses:
        '200':
          description: Lista paginada de usuários.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsuarios'
              examples:
                default:
                  $ref: '#/components/examples/UsuarioLista'
    post:
      tags: [Usuarios]
      summary: Cria um usuário administrativo ou tutor.
      operationId: createUsuario
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioCreateInput'
            examples:
              default:
                $ref: '#/components/examples/UsuarioCreateInput'
      responses:
        '201':
          description: Usuário criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
              examples:
                default:
                  $ref: '#/components/examples/UsuarioDetalhe'
  /usuarios/{id}:
    get:
      tags: [Usuarios]
      summary: Recupera detalhes de um usuário específico.
      operationId: getUsuario
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuário encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
              examples:
                default:
                  $ref: '#/components/examples/UsuarioDetalhe'
    patch:
      tags: [Usuarios]
      summary: Atualiza parcialmente dados de um usuário.
      operationId: updateUsuario
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioUpdateInput'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuário atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
              examples:
                default:
                  $ref: '#/components/examples/UsuarioDetalhe'
    delete:
      tags: [Usuarios]
      summary: Arquiva ou remove um usuário.
      operationId: deleteUsuario
      parameters:
        - $ref: '#/components/parameters/ResourceIdParam'
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Usuário removido.
  /relatorios/progresso:
    get:
      tags: [Relatorios]
      summary: Consolida evolução de estudo por período.
      operationId: getRelatorioProgresso
      security:
        - bearerAuth: []
      parameters:
        - name: inicio
          in: query
          required: true
          description: Data inicial (ISO8601) para o recorte.
          schema:
            type: string
            format: date
        - name: fim
          in: query
          required: true
          description: Data final (ISO8601) para o recorte.
          schema:
            type: string
            format: date
        - name: usuarioId
          in: query
          description: Identificador do aluno para relatórios individuais.
          schema:
            type: string
        - name: cursoId
          in: query
          description: Filtra métricas para um curso específico.
          schema:
            type: string
      responses:
        '200':
          description: Relatório consolidado de progresso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatorioProgresso'
              examples:
                default:
                  $ref: '#/components/examples/RelatorioProgressoResumo'
  /relatorios/engajamento:
    get:
      tags: [Relatorios]
      summary: Retorna indicadores de engajamento e monetização.
      operationId: getRelatorioEngajamento
      security:
        - bearerAuth: []
      parameters:
        - name: referencia
          in: query
          description: Mês de referência no formato AAAA-MM.
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
        - name: comparativoAnterior
          in: query
          description: Quando verdadeiro, inclui comparação com período anterior.
          schema:
            type: boolean
      responses:
        '200':
          description: Painel de engajamento consolidado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatorioEngajamento'
              examples:
                default:
                  $ref: '#/components/examples/RelatorioEngajamentoResumo'
  /webhooks/pagamentos/pix:
    post:
      tags: [Webhooks]
      summary: Recebe notificações de pagamentos Pix.
      operationId: webhookPixPagamentos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPixEvent'
            examples:
              default:
                $ref: '#/components/examples/WebhookPixPagamentoConfirmado'
      responses:
        '202':
          description: Notificação recebida para processamento assíncrono.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    PageParam:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
      description: Número da página (baseado em 1).
    PageSizeParam:
      name: pageSize
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
      description: Quantidade de itens por página.
    SortParam:
      name: sort
      in: query
      schema:
        type: string
      description: Campo e ordem de ordenação (ex. `ano:desc`).
    ResourceIdParam:
      name: id
      in: path
      required: true
      schema:
        type: string
    MentoriaSlotIdParam:
      name: slotId
      in: path
      required: true
      schema:
        type: string
    MentoriaAgendamentoIdParam:
      name: agendamentoId
      in: path
      required: true
      schema:
        type: string
    LiveInscricaoIdParam:
      name: inscricaoId
      in: path
      required: true
      schema:
        type: string
    MaterialBibliotecaIdParam:
      name: id
      in: path
      required: true
      schema:
        type: string
  schemas:
    ServiceHealthStatus:
      type: object
      properties:
        status:
          type: string
          description: Estado atual do serviço monitorado.
          enum: [up, down, disabled, unknown]
        latencyMs:
          type: number
          format: double
          description: Latência observada na última verificação, em milissegundos.
        error:
          type: string
          description: Mensagem de erro retornada pela dependência, quando aplicável.
      required: [status]
    HealthStatusResponse:
      type: object
      properties:
        status:
          type: string
          description: Indicador consolidado considerando todas as dependências.
          enum: [ok, degraded]
        timestamp:
          type: string
          format: date-time
          description: Data e hora ISO da geração do relatório.
        services:
          type: object
          required: [database, redis, meilisearch]
          properties:
            database:
              $ref: '#/components/schemas/ServiceHealthStatus'
            redis:
              $ref: '#/components/schemas/ServiceHealthStatus'
            meilisearch:
              $ref: '#/components/schemas/ServiceHealthStatus'
      required: [status, timestamp, services]
    CatalogosResponse:
      type: object
      properties:
        disciplinas:
          type: array
          items:
            $ref: '#/components/schemas/Disciplina'
        assuntos:
          type: array
          items:
            $ref: '#/components/schemas/Assunto'
        bancas:
          type: array
          items:
            $ref: '#/components/schemas/Banca'
        cargos:
          type: array
          items:
            $ref: '#/components/schemas/Cargo'
        concursos:
          type: array
          items:
            $ref: '#/components/schemas/Concurso'
    Disciplina:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        slug:
          type: string
    Assunto:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        slug:
          type: string
        disciplinaId:
          type: string
        parentId:
          type: string
          nullable: true
    Banca:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        sigla:
          type: string
    Cargo:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        area:
          type: string
        nivel:
          type: string
    Concurso:
      type: object
      properties:
        id:
          type: string
        orgao:
          type: string
        uf:
          type: string
        bancaId:
          type: string
        cargos:
          type: array
          items:
            type: string
        dataProva:
          type: string
          format: date
        temporada:
          type: string
    QuestaoBase:
      type: object
      properties:
        enunciado:
          type: string
        alternativas:
          type: array
          minItems: 5
          maxItems: 5
          items:
            type: object
            properties:
              letra:
                type: string
              texto:
                type: string
        correta:
          type: string
          enum: [A, B, C, D, E]
        explicacao:
          type: string
        dificuldade:
          type: string
          enum: [facil, medio, dificil]
        ano:
          type: integer
        disciplinaId:
          type: string
        assuntoIds:
          type: array
          items:
            type: string
        bancaId:
          type: string
        concursoId:
          type: string
        tags:
          type: array
          items:
            type: string
        midia:
          type: array
          items:
            type: string
            format: uri
    Questao:
      allOf:
        - $ref: '#/components/schemas/QuestaoBase'
        - type: object
          properties:
            id:
              type: string
            estatisticas:
              $ref: '#/components/schemas/QuestaoEstatisticas'
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    QuestaoInput:
      allOf:
        - $ref: '#/components/schemas/QuestaoBase'
        - type: object
          required:
            - enunciado
            - alternativas
            - correta
            - disciplinaId
    QuestaoUpdate:
      $ref: '#/components/schemas/QuestaoBase'
    QuestaoEstatisticas:
      type: object
      properties:
        acertos:
          type: integer
        erros:
          type: integer
        indiceDificuldade:
          type: number
          format: float
    PaginatedQuestoes:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Questao'
        pagination:
          $ref: '#/components/schemas/Pagination'
    FiltroSalvo:
      allOf:
        - $ref: '#/components/schemas/FiltroSalvoInput'
        - type: object
          properties:
            id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    FiltroSalvoInput:
      type: object
      required:
        - nome
        - query
      properties:
        nome:
          type: string
        query:
          type: object
          additionalProperties: true
    PaginatedFiltros:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FiltroSalvo'
        pagination:
          $ref: '#/components/schemas/Pagination'
    CadernoBase:
      type: object
      properties:
        titulo:
          type: string
        questaoIds:
          type: array
          items:
            type: string
        offlineDisponivel:
          type: boolean
    Caderno:
      allOf:
        - $ref: '#/components/schemas/CadernoBase'
        - type: object
          properties:
            id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    CadernoInput:
      allOf:
        - $ref: '#/components/schemas/CadernoBase'
        - type: object
          required:
            - titulo
            - questaoIds
    CadernoUpdate:
      $ref: '#/components/schemas/CadernoBase'
    PaginatedCadernos:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Caderno'
        pagination:
          $ref: '#/components/schemas/Pagination'
    SimuladoBase:
      type: object
      properties:
        nome:
          type: string
        tipo:
          type: string
          enum: [express, manual]
        distribuicao:
          type: object
          additionalProperties: true
        dificuldade:
          type: string
          enum: [facil, medio, dificil, misto]
        bancaId:
          type: string
        numeroQuestoes:
          type: integer
        tempoMinutos:
          type: integer
    Simulado:
      allOf:
        - $ref: '#/components/schemas/SimuladoBase'
        - type: object
          properties:
            id:
              type: string
            questaoIds:
              type: array
              items:
                type: string
            status:
              type: string
              enum: [rascunho, ativo, encerrado]
            resultados:
              $ref: '#/components/schemas/SimuladoResultado'
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    SimuladoInput:
      allOf:
        - $ref: '#/components/schemas/SimuladoBase'
        - type: object
          required:
            - nome
            - tipo
    SimuladoUpdate:
      $ref: '#/components/schemas/SimuladoBase'
    SimuladoExpressRequest:
      type: object
      required:
        - disciplinas
        - configuracao
      properties:
        disciplinas:
          type: array
          items:
            type: string
        configuracao:
          type: object
          properties:
            bancaId:
              type: string
            dificuldade:
              type: string
              enum: [facil, medio, dificil, misto]
            tempoMinutos:
              type: integer
    SimuladoRespostaInput:
      type: object
      required:
        - respostas
      properties:
        respostas:
          type: array
          items:
            type: object
            properties:
              questaoId:
                type: string
              alternativa:
                type: string
                enum: [A, B, C, D, E]
              tempoSegundos:
                type: integer
    SimuladoResultado:
      type: object
      properties:
        questoesRespondidas:
          type: integer
        acertos:
          type: integer
        erros:
          type: integer
        aproveitamento:
          type: number
          format: float
        rankingPosicao:
          type: integer
          nullable: true
    PaginatedSimulados:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Simulado'
        pagination:
          $ref: '#/components/schemas/Pagination'
    DesafioBase:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        organizadorId:
          type: string
        regras:
          type: string
        inicio:
          type: string
          format: date-time
        fim:
          type: string
          format: date-time
        premios:
          type: string
        maxParticipantes:
          type: integer
    Desafio:
      allOf:
        - $ref: '#/components/schemas/DesafioBase'
        - type: object
          properties:
            id:
              type: string
            status:
              type: string
              enum: [rascunho, ativo, encerrado]
            participantes:
              type: array
              items:
                $ref: '#/components/schemas/DesafioParticipante'
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    DesafioInput:
      allOf:
        - $ref: '#/components/schemas/DesafioBase'
        - type: object
          required:
            - nome
            - organizadorId
            - regras
            - inicio
            - fim
    DesafioUpdate:
      $ref: '#/components/schemas/DesafioBase'
    DesafioParticipante:
      type: object
      properties:
        userId:
          type: string
        apelido:
          type: string
        pontos:
          type: integer
    DesafioRanking:
      type: object
      properties:
        desafioId:
          type: string
        ranking:
          type: array
          items:
            $ref: '#/components/schemas/DesafioParticipante'
    PaginatedDesafios:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Desafio'
        pagination:
          $ref: '#/components/schemas/Pagination'
    MetaEstudoBase:
      type: object
      properties:
        tipo:
          type: string
          enum: [questoes, horas, acertos, rendimento]
        alvo:
          type: number
        janela:
          type: string
          enum: [diario, semanal, mensal]
        inicio:
          type: string
          format: date-time
        fim:
          type: string
          format: date-time
    MetaEstudo:
      allOf:
        - $ref: '#/components/schemas/MetaEstudoBase'
        - type: object
          properties:
            id:
              type: string
            progressoAtual:
              type: number
            status:
              type: string
              enum: [ativo, concluido, expirado]
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    MetaEstudoInput:
      allOf:
        - $ref: '#/components/schemas/MetaEstudoBase'
        - type: object
          required:
            - tipo
            - alvo
            - janela
    MetaEstudoUpdate:
      $ref: '#/components/schemas/MetaEstudoBase'
    PaginatedMetas:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetaEstudo'
        pagination:
          $ref: '#/components/schemas/Pagination'
    MentoriaBase:
      type: object
      properties:
        titulo:
          type: string
        descricao:
          type: string
        mentorId:
          type: string
        tags:
          type: array
          items:
            type: string
        modalidade:
          type: string
          enum: [online, presencial, hibrida]
        duracaoMinutos:
          type: integer
        publicoAlvo:
          type: string
        status:
          type: string
          enum: [rascunho, publicada, arquivada]
    Mentoria:
      allOf:
        - $ref: '#/components/schemas/MentoriaBase'
        - type: object
          properties:
            id:
              type: string
            slots:
              type: array
              items:
                $ref: '#/components/schemas/MentoriaSlot'
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    MentoriaInput:
      allOf:
        - $ref: '#/components/schemas/MentoriaBase'
        - type: object
          required:
            - titulo
            - mentorId
            - duracaoMinutos
            - modalidade
    MentoriaUpdate:
      $ref: '#/components/schemas/MentoriaBase'
    MentoriaSlot:
      type: object
      properties:
        id:
          type: string
        inicio:
          type: string
          format: date-time
        fim:
          type: string
          format: date-time
        capacidade:
          type: integer
        inscritosAtuais:
          type: integer
        status:
          type: string
          enum: [disponivel, cheio, bloqueado, cancelado]
    MentoriaSlotInput:
      type: object
      required:
        - inicio
        - fim
        - capacidade
      properties:
        inicio:
          type: string
          format: date-time
        fim:
          type: string
          format: date-time
        capacidade:
          type: integer
    MentoriaSlotUpdate:
      type: object
      properties:
        capacidade:
          type: integer
        status:
          type: string
          enum: [disponivel, cheio, bloqueado, cancelado]
    MentoriaAgendamento:
      type: object
      properties:
        id:
          type: string
        slotId:
          type: string
        userId:
          type: string
        status:
          type: string
          enum: [pendente, confirmado, concluido, cancelado]
        notas:
          type: string
        criadoEm:
          type: string
          format: date-time
        atualizadoEm:
          type: string
          format: date-time
    MentoriaAgendamentoInput:
      type: object
      required:
        - slotId
        - userId
      properties:
        slotId:
          type: string
        userId:
          type: string
        notas:
          type: string
    MentoriaAgendamentoUpdate:
      type: object
      properties:
        status:
          type: string
          enum: [pendente, confirmado, concluido, cancelado]
        notas:
          type: string
    PaginatedMentorias:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Mentoria'
        pagination:
          $ref: '#/components/schemas/Pagination'
    LiveEventoBase:
      type: object
      properties:
        titulo:
          type: string
        descricao:
          type: string
        apresentador:
          type: string
        inicio:
          type: string
          format: date-time
        fim:
          type: string
          format: date-time
        linkStream:
          type: string
          format: uri
        replayUrl:
          type: string
          format: uri
        capacidade:
          type: integer
        status:
          type: string
          enum: [rascunho, publicado, encerrado]
        tags:
          type: array
          items:
            type: string
    LiveEvento:
      allOf:
        - $ref: '#/components/schemas/LiveEventoBase'
        - type: object
          properties:
            id:
              type: string
            inscritosAtuais:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    LiveEventoInput:
      allOf:
        - $ref: '#/components/schemas/LiveEventoBase'
        - type: object
          required:
            - titulo
            - inicio
            - fim
            - apresentador
    LiveEventoUpdate:
      $ref: '#/components/schemas/LiveEventoBase'
    PaginatedLives:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LiveEvento'
        pagination:
          $ref: '#/components/schemas/Pagination'
    LiveInscricao:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        status:
          type: string
          enum: [confirmada, aguardando, cancelada]
        inscritoEm:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    LiveInscricaoInput:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
        status:
          type: string
          enum: [confirmada, aguardando]
    LiveInscricaoUpdate:
      type: object
      properties:
        status:
          type: string
          enum: [confirmada, aguardando, cancelada]
    MaterialBibliotecaBase:
      type: object
      properties:
        titulo:
          type: string
        descricao:
          type: string
        formato:
          type: string
          enum: [pdf, video, audio, checklist, modelo]
        arquivoUrl:
          type: string
          format: uri
        linkExterno:
          type: string
          format: uri
          nullable: true
        thumbnailUrl:
          type: string
          format: uri
          nullable: true
        duracaoMinutos:
          type: integer
          minimum: 0
          nullable: true
        disciplinaIds:
          type: array
          items:
            type: string
        assuntoIds:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        destaque:
          type: boolean
        publicadoEm:
          type: string
          format: date-time
          nullable: true
    MaterialBiblioteca:
      allOf:
        - $ref: '#/components/schemas/MaterialBibliotecaBase'
        - type: object
          properties:
            id:
              type: string
            status:
              type: string
              enum: [rascunho, publicado, arquivado]
            autor:
              type: object
              properties:
                id:
                  type: string
                nome:
                  type: string
            downloads:
              type: integer
            visualizacoes:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    MaterialBibliotecaInput:
      allOf:
        - $ref: '#/components/schemas/MaterialBibliotecaBase'
        - type: object
          required:
            - titulo
            - formato
            - arquivoUrl
            - autorId
          properties:
            autorId:
              type: string
    MaterialBibliotecaUpdate:
      allOf:
        - $ref: '#/components/schemas/MaterialBibliotecaBase'
        - type: object
          properties:
            autorId:
              type: string
            status:
              type: string
              enum: [rascunho, publicado, arquivado]
    PaginatedMateriaisBiblioteca:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MaterialBiblioteca'
        pagination:
          $ref: '#/components/schemas/Pagination'
    CursoBase:
      type: object
      properties:
        titulo:
          type: string
        descricao:
          type: string
        tags:
          type: array
          items:
            type: string
        destaque:
          type: boolean
    Curso:
      allOf:
        - $ref: '#/components/schemas/CursoBase'
        - type: object
          properties:
            id:
              type: string
            destaque:
              type: boolean
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    CursoInput:
      allOf:
        - $ref: '#/components/schemas/CursoBase'
        - type: object
          required:
            - titulo
            - descricao
    CursoUpdate:
      $ref: '#/components/schemas/CursoBase'
    AulaBase:
      type: object
      properties:
        titulo:
          type: string
        tipo:
          type: string
          enum: [video, pdf, audio]
        url:
          type: string
          format: uri
        duracaoSegundos:
          type: integer
        anexos:
          type: array
          items:
            type: string
            format: uri
    Aula:
      allOf:
        - $ref: '#/components/schemas/AulaBase'
        - type: object
          properties:
            id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    AulaInput:
      allOf:
        - $ref: '#/components/schemas/AulaBase'
        - type: object
          required:
            - titulo
            - tipo
            - url
    AulaUpdate:
      $ref: '#/components/schemas/AulaBase'
    PaginatedCursos:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Curso'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PaginatedAulas:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Aula'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PlanoBase:
      type: object
      properties:
        nome:
          type: string
        tipo:
          type: string
          description: >-
            Define o tipo do plano: pago tradicional ou Plano Grátis para Alunos
            que exige aprovação manual do super admin antes da publicação.
          enum: [pago, gratis_aluno]
        periodicidade:
          type: string
          enum: [mensal, trimestral, semestral, anual]
        preco:
          type: number
          format: float
          nullable: true
          description: >-
            Valor em moeda local. Obrigatório para planos pagos; em planos
            gratuitos informar 0 ou omitir, pois o preço será exibido como "Grátis".
        moeda:
          type: string
          default: BRL
          description: Código da moeda ISO 4217 usado na cobrança do plano.
        chavePix:
          type: string
          nullable: true
          description: >-
            Chave Pix dedicada usada nas cobranças do plano. Obrigatória para
            planos pagos e exibida no dashboard para conferência.
        beneficios:
          type: array
          items:
            type: string
    Plano:
      allOf:
        - $ref: '#/components/schemas/PlanoBase'
        - type: object
          properties:
            id:
              type: string
            statusAprovacao:
              type: string
              description: >-
                Estado do fluxo de aprovação. Planos Grátis para Alunos só ficam
                visíveis após aprovação do super admin.
              enum: [pendente, aprovado, rejeitado]
            aprovadoPor:
              type: string
              nullable: true
              description: Identificador do super admin que aprovou o plano.
            aprovadoEm:
              type: string
              format: date-time
              nullable: true
              description: Momento em que a aprovação foi registrada.
            beneficios:
              type: array
              items:
                type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    PlanoInput:
      allOf:
        - $ref: '#/components/schemas/PlanoBase'
        - type: object
          required:
            - nome
            - tipo
            - periodicidade
    PlanoUpdate:
      $ref: '#/components/schemas/PlanoBase'
    PlanoPrecoUpdateInput:
      type: object
      required:
        - preco
        - moeda
      properties:
        preco:
          type: number
          format: float
          description: Novo valor do plano após o ajuste.
        moeda:
          type: string
          description: Código ISO 4217 que representa a moeda do preço.
        motivo:
          type: string
          description: Justificativa exibida no dashboard e registrada para auditoria.
    PlanoPrecoHistorico:
      type: object
      properties:
        planoId:
          type: string
        nomePlano:
          type: string
        atualizadoPor:
          type: string
        atualizadoEm:
          type: string
          format: date-time
        precoAnterior:
          type: number
          format: float
        precoAtual:
          type: number
          format: float
        moeda:
          type: string
        motivo:
          type: string
    PlanosDashboardResumo:
      type: object
      properties:
        totalPlanosPagos:
          type: integer
        totalPlanosGratuitos:
          type: integer
        pendentesAprovacao:
          type: integer
        ultimoAjuste:
          type: object
          nullable: true
          properties:
            planoId:
              type: string
            nomePlano:
              type: string
            atualizadoPor:
              type: string
            atualizadoEm:
              type: string
              format: date-time
            precoAtual:
              type: number
              format: float
            moeda:
              type: string
        historicoPrecos:
          type: array
          items:
            $ref: '#/components/schemas/PlanoPrecoHistorico'
        planos:
          type: array
          description: Lista resumida usada no dashboard para destacar planos-chave.
          items:
            $ref: '#/components/schemas/Plano'
    DashboardUsuarioResumo:
      type: object
      required: [id, nome]
      properties:
        id:
          type: string
        nome:
          type: string
        saudacao:
          type: string
        objetivo:
          type: string
        streakDias:
          type: integer
        nivel:
          type: string
        badge:
          type: string
        assinaturaAtual:
          type: object
          nullable: true
          properties:
            planoId:
              type: string
            status:
              type: string
            renovaEm:
              type: string
              format: date
    DashboardQuickAction:
      type: object
      required: [icone, titulo, descricao, rota]
      properties:
        icone:
          type: string
        titulo:
          type: string
        descricao:
          type: string
        rota:
          type: string
    DashboardMetricHighlight:
      type: object
      required: [rotulo, valor]
      properties:
        rotulo:
          type: string
        valor:
          type: string
        comentario:
          type: string
    DashboardLearnerSpotlight:
      type: object
      required: [usuarioId, nome, avatarUrl, resumo]
      properties:
        usuarioId:
          type: string
        nome:
          type: string
        avatarUrl:
          type: string
          format: uri
        objetivo:
          type: string
        resumo:
          type: string
        tendencia:
          type: string
        badge:
          type: string
    DashboardPlanHighlight:
      type: object
      required: [planoId, titulo, preco, moeda]
      properties:
        planoId:
          type: string
        titulo:
          type: string
        tag:
          type: string
        preco:
          type: number
          format: float
        moeda:
          type: string
        statusAprovacao:
          type: string
          enum: [pendente, aprovado, rejeitado]
    DashboardRecentSubscription:
      type: object
      required: [assinaturaId, usuarioId, planoId, status]
      properties:
        assinaturaId:
          type: string
        usuarioId:
          type: string
        planoId:
          type: string
        status:
          type: string
        statusPagamento:
          type: string
    DashboardModuleCard:
      type: object
      required: [tipo, titulo, descricao]
      properties:
        tipo:
          type: string
        titulo:
          type: string
        descricao:
          type: string
        progresso:
          type: number
          format: float
          nullable: true
        tag:
          type: string
          nullable: true
    DashboardModule:
      type: object
      required: [titulo, cards]
      properties:
        titulo:
          type: string
        cards:
          type: array
          items:
            $ref: '#/components/schemas/DashboardModuleCard'
    DashboardLiveHighlight:
      type: object
      required: [titulo, data, instrutor]
      properties:
        titulo:
          type: string
        data:
          type: string
          format: date-time
        instrutor:
          type: string
        duracaoMinutos:
          type: integer
        link:
          type: string
          format: uri
    DashboardNewsItem:
      type: object
      required: [titulo, resumo, link]
      properties:
        titulo:
          type: string
        resumo:
          type: string
        link:
          type: string
          format: uri
    DashboardHomeResponse:
      type: object
      required:
        - usuario
        - atalhosRapidos
        - metricasSemana
        - destaquesAlunos
        - planosDestaque
        - assinaturasRecentes
        - modulos
        - proximasLives
        - noticias
        - ultimaSincronizacao
      properties:
        usuario:
          $ref: '#/components/schemas/DashboardUsuarioResumo'
        atalhosRapidos:
          type: array
          items:
            $ref: '#/components/schemas/DashboardQuickAction'
        metricasSemana:
          type: array
          items:
            $ref: '#/components/schemas/DashboardMetricHighlight'
        destaquesAlunos:
          type: array
          items:
            $ref: '#/components/schemas/DashboardLearnerSpotlight'
        planosDestaque:
          type: array
          items:
            $ref: '#/components/schemas/DashboardPlanHighlight'
        assinaturasRecentes:
          type: array
          items:
            $ref: '#/components/schemas/DashboardRecentSubscription'
        modulos:
          type: array
          items:
            $ref: '#/components/schemas/DashboardModule'
        proximasLives:
          type: array
          items:
            $ref: '#/components/schemas/DashboardLiveHighlight'
        noticias:
          type: array
          items:
            $ref: '#/components/schemas/DashboardNewsItem'
        ultimaSincronizacao:
          type: string
          format: date-time
        fonte:
          type: string
    OperationsReadinessSnapshot:
      type: object
      required:
        - overall
        - components
        - counts
      properties:
        timestamp:
          type: string
          format: date-time
        baselineTimestamp:
          type: string
          format: date-time
        overall:
          $ref: '#/components/schemas/OperationsReadinessOverall'
        components:
          type: array
          items:
            $ref: '#/components/schemas/OperationsReadinessComponent'
        counts:
          type: object
          additionalProperties:
            type: number
        sources:
          type: array
          items:
            $ref: '#/components/schemas/OperationsReadinessSource'
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/OperationsReadinessMilestone'
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/OperationsReadinessAlert'
        incidents:
          type: array
          items:
            $ref: '#/components/schemas/OperationsIncident'
        maintenanceWindows:
          type: array
          items:
            $ref: '#/components/schemas/OperationsMaintenanceWindow'
        onCall:
          type: array
          items:
            $ref: '#/components/schemas/OperationsOnCallEntry'
        automations:
          type: array
          items:
            $ref: '#/components/schemas/OperationsAutomation'
        slos:
          type: array
          items:
            $ref: '#/components/schemas/OperationsSlo'
        sloBreaches:
          type: array
          items:
            $ref: '#/components/schemas/OperationsSloBreach'
    OperationsReadinessOverall:
      type: object
      required: [percentage, baseline, computed]
      properties:
        percentage:
          type: integer
          minimum: 0
          maximum: 100
        baseline:
          type: integer
          minimum: 0
          maximum: 100
        computed:
          type: integer
          minimum: 0
          maximum: 100
        weights:
          type: object
          additionalProperties:
            type: number
        notes:
          type: array
          items:
            type: string
    OperationsReadinessComponent:
      type: object
      required: [key, percentage, baseline, computed]
      properties:
        key:
          type: string
        label:
          type: string
        percentage:
          type: integer
        baseline:
          type: integer
        computed:
          type: integer
        weight:
          type: number
        notes:
          type: array
          items:
            type: string
        nextSteps:
          type: array
          items:
            type: string
        checks:
          type: array
          items:
            $ref: '#/components/schemas/OperationsReadinessCheck'
        pending:
          type: array
          items:
            type: string
    OperationsReadinessCheck:
      type: object
      required: [key, label, status]
      properties:
        key:
          type: string
        label:
          type: string
        status:
          type: string
          enum: [done, todo]
        details:
          type: string
    OperationsReadinessSource:
      type: object
      required: [type, value]
      properties:
        type:
          type: string
        value:
          type: string
        description:
          type: string
    OperationsReadinessMilestone:
      type: object
      required: [id, title, status]
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        owner:
          type: string
        component:
          type: string
        status:
          type: string
          enum: [pending, in_progress, done]
        completion:
          type: integer
          minimum: 0
          maximum: 100
        targetDate:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        blockers:
          type: array
          items:
            type: string
        overdue:
          type: boolean
    OperationsReadinessAlert:
      type: object
      required: [id, level, message]
      properties:
        id:
          type: string
        level:
          type: string
          enum: [info, warning, critical]
        message:
          type: string
        details:
          type: string
        component:
          type: string
        actionLabel:
          type: string
        actionUrl:
          type: string
          format: uri
        active:
          type: boolean
    OperationsIncident:
      type: object
      required: [id, title, status, impact]
      properties:
        id:
          type: string
        title:
          type: string
        status:
          type: string
          enum: [investigating, monitoring, resolved]
        impact:
          type: string
          enum: [none, minor, major, critical]
        component:
          type: string
        summary:
          type: string
        startedAt:
          type: string
          format: date-time
        resolvedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        durationMinutes:
          type: integer
        actions:
          type: array
          items:
            type: string
        active:
          type: boolean
    OperationsMaintenanceWindow:
      type: object
      required: [id, title, status, impact]
      properties:
        id:
          type: string
        title:
          type: string
        status:
          type: string
          enum: [scheduled, in_progress, completed]
        impact:
          type: string
          enum: [none, minor, major, critical]
        windowStart:
          type: string
          format: date-time
        windowEnd:
          type: string
          format: date-time
        durationMinutes:
          type: integer
        description:
          type: string
        notes:
          type: string
        systems:
          type: array
          items:
            type: string
    OperationsOnCallEntry:
      type: object
      required: [id, name, role, status, primary]
      properties:
        id:
          type: string
        name:
          type: string
          description: Nome do plantonista
        role:
          type: string
          description: Função atribuída ao plantão
        contact:
          type: string
          description: Canal de contato prioritário
        status:
          type: string
          enum: [active, standby, offline]
        primary:
          type: boolean
        startedAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time
        shiftDurationMinutes:
          type: integer
        escalationPolicy:
          type: string
          description: Orientações para escalonamento
    OperationsAutomation:
      type: object
      required: [id, title, status]
      properties:
        id:
          type: string
        title:
          type: string
          description: Nome amigável da automação
        description:
          type: string
        status:
          type: string
          enum: [operational, in_progress, degraded, blocked]
        owners:
          type: array
          items:
            type: string
        lastRunAt:
          type: string
          format: date-time
        nextRunAt:
          type: string
          format: date-time
        successRate:
          type: number
          description: Taxa de sucesso agregada (0 a 1)
        coverage:
          type: number
          description: Cobertura percentual aproximada da automação
        signals:
          type: array
          items:
            type: string
        playbooks:
          type: array
          items:
            type: string
    OperationsSlo:
      type: object
      required: [id, service, indicator, target, current, direction, status]
      properties:
        id:
          type: string
        service:
          type: string
          description: Serviço ou módulo monitorado
        indicator:
          type: string
          description: Indicador rastreado (ex. disponibilidade, latência)
        target:
          type: number
          description: Meta definida para o indicador
        current:
          type: number
          description: Valor atual observado
        direction:
          type: string
          enum: [above, below]
          description: Se o indicador deve ficar acima ou abaixo da meta
        status:
          type: string
          enum: [healthy, at_risk, breaching]
        windowDays:
          type: integer
          description: Janela de apuração em dias
        breaches:
          type: integer
          description: Número de violações registradas na janela
        notes:
          type: array
          items:
            type: string
    OperationsSloBreach:
      type: object
      required: [id, sloId, service, indicator, status, impact]
      properties:
        id:
          type: string
        sloId:
          type: string
        service:
          type: string
        indicator:
          type: string
        status:
          type: string
          enum: [open, acknowledged, resolved]
        impact:
          type: string
          enum: [none, minor, major, critical]
        windowDays:
          type: integer
        breachPercentage:
          type: number
          format: float
        detectedAt:
          type: string
          format: date-time
        resolvedAt:
          type: string
          format: date-time
        owner:
          type: string
        actions:
          type: array
          items:
            type: string
        isActive:
          type: boolean
        isUpcoming:
          type: boolean
    Assinatura:
      allOf:
        - $ref: '#/components/schemas/AssinaturaInput'
        - type: object
          properties:
            id:
              type: string
            status:
              type: string
              enum: [ativa, pendente, cancelada, expirada]
            statusPagamento:
              type: string
              enum: [aguardando, pago, expirado]
            inicio:
              type: string
              format: date-time
            fim:
              type: string
              format: date-time
            pixInfo:
              $ref: '#/components/schemas/AssinaturaPixInfo'
              nullable: true
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    AssinaturaInput:
      type: object
      required:
        - planoId
        - metodoPagamento
      properties:
        planoId:
          type: string
        metodoPagamento:
          type: string
          enum: [pix, gratis_aluno]
        pagador:
          $ref: '#/components/schemas/AssinaturaPixDadosCobranca'
          nullable: true
          description: Obrigatório quando metodoPagamento = pix.
        cobrancaPixId:
          type: string
          nullable: true
          description: Identificador da última cobrança Pix vinculada à assinatura.
        cupom:
          type: string
          nullable: true
    PaginatedAssinaturas:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Assinatura'
        pagination:
          $ref: '#/components/schemas/Pagination'
    AssinaturaPixDadosCobranca:
      type: object
      required:
        - nome
        - documento
      properties:
        nome:
          type: string
        documento:
          type: string
          description: CPF ou CNPJ do cliente sem formatação.
        email:
          type: string
          format: email
          nullable: true
        telefone:
          type: string
          nullable: true
        endereco:
          type: object
          nullable: true
          properties:
            linha1:
              type: string
            linha2:
              type: string
              nullable: true
            cidade:
              type: string
            estado:
              type: string
            cep:
              type: string
            pais:
              type: string
              description: Código ISO alfa-2.
    AssinaturaPixInfo:
      type: object
      properties:
        ultimaCobrancaId:
          type: string
          description: Identificador da cobrança Pix mais recente vinculada à assinatura.
        codigoCopiaCola:
          type: string
          description: Payload completo "copia e cola" para pagamentos Pix.
        qrCodeUrl:
          type: string
          format: uri
          nullable: true
          description: URL para download do QR Code dinâmico gerado na cobrança.
        qrCodeBase64:
          type: string
          nullable: true
          description: Representação Base64 do QR Code Pix.
        chavePix:
          type: string
          description: Chave Pix utilizada na geração da cobrança.
        statusPagamento:
          type: string
          enum: [aguardando, pago, expirado]
        pagamentoConfirmadoEm:
          type: string
          format: date-time
          nullable: true
        atualizadoEm:
          type: string
          format: date-time
        valor:
          type: number
          format: float
        moeda:
          type: string
    PixChavePrincipal:
      type: object
      required:
        - chave
        - tipo
        - codigoCopiaCola
        - qrCodeBase64
        - atualizadoEm
      properties:
        chave:
          type: string
          description: Chave Pix oficial cadastrada para recebimento das assinaturas.
        tipo:
          type: string
          enum: [email, celular, cpf, cnpj, aleatoria]
          description: Tipo da chave Pix cadastrada junto ao provedor.
        codigoCopiaCola:
          type: string
          description: Payload completo formato copia e cola pronto para pagamentos imediatos.
        qrCodeBase64:
          type: string
          description: QR Code correspondente à chave em Base64 para renderização instantânea.
        qrCodeUrl:
          type: string
          format: uri
          nullable: true
          description: URL opcional apontando para a arte do QR Code hospedada no CDN.
        provedor:
          type: string
          description: Instituição financeira responsável pela gestão da chave Pix.
        atualizadoEm:
          type: string
          format: date-time
        observacoes:
          type: string
          nullable: true
          description: Notas adicionais exibidas no dashboard ao copiar a chave Pix.
    PixCobranca:
      type: object
      properties:
        id:
          type: string
        txid:
          type: string
          description: Código único de transação informado pelo provedor Pix.
        planoId:
          type: string
        assinaturaId:
          type: string
          nullable: true
        usuarioId:
          type: string
          nullable: true
        valor:
          type: number
          format: float
        moeda:
          type: string
        status:
          type: string
          enum: [pendente, confirmado, expirado, cancelado, reembolsado]
        codigoCopiaCola:
          type: string
          description: Payload completo "copia e cola" retornado pelo provedor Pix.
        chavePix:
          type: string
          description: Chave Pix utilizada na cobrança.
        qrCode:
          type: object
          nullable: true
          properties:
            url:
              type: string
              format: uri
              nullable: true
            base64:
              type: string
              nullable: true
        expiraEm:
          type: string
          format: date-time
        confirmadoEm:
          type: string
          format: date-time
          nullable: true
        expiradoEm:
          type: string
          format: date-time
          nullable: true
        canceladoEm:
          type: string
          format: date-time
          nullable: true
        pagador:
          $ref: '#/components/schemas/AssinaturaPixDadosCobranca'
        metadata:
          type: object
          nullable: true
          additionalProperties: true
        criadoEm:
          type: string
          format: date-time
          nullable: true
        atualizadoEm:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - txid
        - planoId
        - valor
        - moeda
        - status
        - codigoCopiaCola
        - expiraEm
    PixCobrancaInput:
      type: object
      properties:
        planoId:
          type: string
          description: Identificador do plano que será cobrado.
        assinaturaId:
          type: string
          description: Reutiliza uma assinatura existente ao gerar a cobrança.
        usuarioId:
          type: string
          description: Obrigatório quando assinaturaId não for informado.
        valor:
          type: number
          format: float
          description: Valor da cobrança. Usa o preço do plano quando omitido.
        expiracaoMinutos:
          type: integer
          description: "Tempo de expiração da cobrança em minutos (padrão: 30)."
        nomePagador:
          type: string
          nullable: true
        documentoPagador:
          type: string
          nullable: true
        pagador:
          $ref: '#/components/schemas/AssinaturaPixDadosCobranca'
          nullable: true
          description: >-
            Dados do pagador apresentados no recibo Pix. Pode ser usado em conjunto
            com os campos nomePagador e documentoPagador.
        metadata:
          type: object
          nullable: true
          additionalProperties: true
          description: Metadados adicionais para conciliação no dashboard.
    PixCobrancaStatusUpdate:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [pendente, confirmado, expirado, cancelado, reembolsado]
    NpsPerguntaBase:
      type: object
      properties:
        tipo:
          type: string
          enum: [nota, texto, multipla]
        titulo:
          type: string
        descricao:
          type: string
          nullable: true
        obrigatoria:
          type: boolean
        ordem:
          type: integer
        opcoes:
          type: array
          nullable: true
          description: Alternativas apresentadas quando o tipo é multipla.
          items:
            type: object
            properties:
              valor:
                type: string
              label:
                type: string
              descricao:
                type: string
                nullable: true
    NpsPergunta:
      allOf:
        - $ref: '#/components/schemas/NpsPerguntaBase'
        - type: object
          properties:
            id:
              type: string
    NpsPesquisaBase:
      type: object
      properties:
        titulo:
          type: string
        contexto:
          type: string
          description: Fluxo em que a pesquisa aparece (dashboard, planos, onboarding, suporte, etc.).
        descricao:
          type: string
          nullable: true
        status:
          type: string
          enum: [rascunho, agendada, ativa, encerrada]
          gatilhos:
            type: object
            nullable: true
            properties:
              evento:
                type: string
                description: "Evento que dispara a pesquisa (ex.: assinatura_cancelada, meta_concluida)."
            atrasoDias:
              type: integer
              nullable: true
            condicoes:
              type: array
              nullable: true
              items:
                type: string
        janela:
          type: object
          nullable: true
          properties:
            inicio:
              type: string
              format: date-time
            fim:
              type: string
              format: date-time
        segmentacao:
          type: object
          nullable: true
          properties:
            planoIds:
              type: array
              items:
                type: string
            tagsUsuarios:
              type: array
              items:
                type: string
            minimoDiasAtivo:
              type: integer
        perguntas:
          type: array
          items:
            $ref: '#/components/schemas/NpsPergunta'
    NpsPesquisa:
      allOf:
        - $ref: '#/components/schemas/NpsPesquisaBase'
        - type: object
          properties:
            id:
              type: string
            totalRespostas:
              type: integer
            scoreAtual:
              type: number
              format: float
            promotores:
              type: integer
            neutros:
              type: integer
            detratores:
              type: integer
            ultimaExecucao:
              type: string
              format: date-time
              nullable: true
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    NpsPesquisaInput:
      allOf:
        - $ref: '#/components/schemas/NpsPesquisaBase'
        - type: object
          required:
            - titulo
            - contexto
            - perguntas
          properties:
            perguntas:
              type: array
              items:
                $ref: '#/components/schemas/NpsPerguntaBase'
    NpsPesquisaUpdate:
      allOf:
        - $ref: '#/components/schemas/NpsPesquisaBase'
        - type: object
          properties:
            perguntas:
              type: array
              items:
                $ref: '#/components/schemas/NpsPerguntaBase'
    PaginatedPesquisasNps:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NpsPesquisa'
        pagination:
          $ref: '#/components/schemas/Pagination'
    NpsRespostaBase:
      type: object
      properties:
        nota:
          type: integer
          minimum: 0
          maximum: 10
        comentario:
          type: string
          nullable: true
        canal:
          type: string
          enum: [app, email, web]
        tags:
          type: array
          nullable: true
          items:
            type: string
    NpsRespostaInput:
      allOf:
        - $ref: '#/components/schemas/NpsRespostaBase'
        - type: object
          required:
            - nota
    NpsResposta:
      allOf:
        - $ref: '#/components/schemas/NpsRespostaBase'
        - type: object
          properties:
            id:
              type: string
            pesquisaId:
              type: string
            usuario:
              type: object
              properties:
                id:
                  type: string
                nome:
                  type: string
                avatarUrl:
                  type: string
                  format: uri
                  nullable: true
            registradaEm:
              type: string
              format: date-time
    PaginatedRespostasNps:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NpsResposta'
        pagination:
          $ref: '#/components/schemas/Pagination'
    NpsPainelResumo:
      type: object
      properties:
        periodoReferencia:
          type: string
        scoreAtual:
          type: number
          format: float
        classificacao:
          type: string
          enum: [detrator, neutro, promotor]
        amostra:
          type: integer
        promotores:
          type: integer
        neutros:
          type: integer
        detratores:
          type: integer
        tendenciaScore:
          type: array
          items:
            type: object
            properties:
              periodo:
                type: string
              score:
                type: number
                format: float
        ultimasRespostas:
          type: array
          items:
            $ref: '#/components/schemas/NpsResposta'
    PerguntaComunidadeBase:
      type: object
      properties:
        titulo:
          type: string
        corpo:
          type: string
        disciplinaId:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [publicada, rascunho, arquivada]
        visibilidade:
          type: string
          enum: [publica, privada]
        fixadaNoTopo:
          type: boolean
        permitirRespostaAnonima:
          type: boolean
    PerguntaComunidade:
      allOf:
        - $ref: '#/components/schemas/PerguntaComunidadeBase'
        - type: object
          properties:
            id:
              type: string
            autor:
              type: object
              properties:
                id:
                  type: string
                nome:
                  type: string
                avatarUrl:
                  type: string
                  format: uri
                  nullable: true
            metricas:
              type: object
              properties:
                respostas:
                  type: integer
                curtidas:
                  type: integer
                visualizacoes:
                  type: integer
            melhorRespostaId:
              type: string
              nullable: true
            respondidaEm:
              type: string
              format: date-time
              nullable: true
            ultimaInteracaoEm:
              type: string
              format: date-time
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    PerguntaComunidadeInput:
      allOf:
        - $ref: '#/components/schemas/PerguntaComunidadeBase'
        - type: object
          required:
            - titulo
            - corpo
    PerguntaComunidadeUpdate:
      $ref: '#/components/schemas/PerguntaComunidadeBase'
    PaginatedPerguntasComunidade:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PerguntaComunidade'
        pagination:
          $ref: '#/components/schemas/Pagination'
    RespostaComunidadeBase:
      type: object
      properties:
        corpo:
          type: string
        fontesComplementares:
          type: array
          items:
            type: string
            format: uri
        status:
          type: string
          enum: [publicada, rascunho, arquivada]
        aceita:
          type: boolean
    RespostaComunidade:
      allOf:
        - $ref: '#/components/schemas/RespostaComunidadeBase'
        - type: object
          properties:
            id:
              type: string
            autor:
              type: object
              properties:
                id:
                  type: string
                nome:
                  type: string
                avatarUrl:
                  type: string
                  format: uri
                  nullable: true
            curtidas:
              type: integer
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    RespostaComunidadeInput:
      allOf:
        - $ref: '#/components/schemas/RespostaComunidadeBase'
        - type: object
          required:
            - corpo
    RespostaComunidadeUpdate:
      $ref: '#/components/schemas/RespostaComunidadeBase'
    PaginatedRespostasComunidade:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RespostaComunidade'
        pagination:
          $ref: '#/components/schemas/Pagination'
    TicketSuporteBase:
      type: object
      properties:
        assunto:
          type: string
        descricao:
          type: string
        categoria:
          type: string
        prioridade:
          type: string
          enum: [baixa, media, alta, critica]
        canalOrigem:
          type: string
          enum: [app, cms, email, chat, telefone]
        anexos:
          type: array
          items:
            type: string
            format: uri
        tags:
          type: array
          items:
            type: string
    TicketSuporte:
      allOf:
        - $ref: '#/components/schemas/TicketSuporteBase'
        - type: object
          properties:
            id:
              type: string
            status:
              type: string
              enum: [aberto, em_andamento, resolvido, arquivado]
            solicitante:
              type: object
              properties:
                id:
                  type: string
                nome:
                  type: string
                email:
                  type: string
                  format: email
            responsavel:
              type: object
              nullable: true
              properties:
                id:
                  type: string
                nome:
                  type: string
            slaLimite:
              type: string
              format: date-time
              nullable: true
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            fechadoEm:
              type: string
              format: date-time
              nullable: true
    TicketSuporteInput:
      allOf:
        - $ref: '#/components/schemas/TicketSuporteBase'
        - type: object
          required:
            - assunto
            - descricao
    TicketSuporteUpdate:
      allOf:
        - $ref: '#/components/schemas/TicketSuporteBase'
        - type: object
          properties:
            status:
              type: string
              enum: [aberto, em_andamento, resolvido, arquivado]
            responsavelId:
              type: string
            slaLimite:
              type: string
              format: date-time
    PaginatedTicketsSuporte:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TicketSuporte'
        pagination:
          $ref: '#/components/schemas/Pagination'
    TicketInteracao:
      type: object
      properties:
        id:
          type: string
        autor:
          type: object
          properties:
            id:
              type: string
            nome:
              type: string
            papel:
              type: string
        tipo:
          type: string
          enum: [mensagem, nota_interna, atualizacao_status]
        mensagem:
          type: string
        privado:
          type: boolean
        anexos:
          type: array
          items:
            type: string
            format: uri
        createdAt:
          type: string
          format: date-time
    TicketInteracaoInput:
      type: object
      required:
        - mensagem
      properties:
        mensagem:
          type: string
        tipo:
          type: string
          enum: [mensagem, nota_interna]
        privado:
          type: boolean
        anexos:
          type: array
          items:
            type: string
            format: uri
    AuthLoginInput:
      type: object
      required:
        - email
        - senha
      properties:
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
        dispositivoId:
          type: string
          description: Identificador opcional do dispositivo para controles de sessão.
    AuthLoginResponse:
      type: object
      properties:
        tokens:
          $ref: '#/components/schemas/AuthTokenPair'
        usuario:
          $ref: '#/components/schemas/UsuarioSessao'
        requiresMfa:
          type: boolean
          default: false
    AuthRefreshInput:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
        dispositivoId:
          type: string
    AuthRefreshResponse:
      type: object
      properties:
        tokens:
          $ref: '#/components/schemas/AuthTokenPair'
    AuthLogoutInput:
      type: object
      properties:
        dispositivoId:
          type: string
          description: Dispositivo para revogar sessão específica.
    AuthTokenPair:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: integer
          description: Tempo em segundos para expiração do access token.
    UsuarioSessao:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        email:
          type: string
          format: email
        papel:
          type: string
          enum: [aluno, tutor, editor, admin, suporte]
        permissoes:
          type: array
          items:
            type: string
        avatarUrl:
          type: string
          format: uri
          nullable: true
        ultimoAcesso:
          type: string
          format: date-time
    UsuarioBase:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
          format: email
        papel:
          type: string
          enum: [aluno, tutor, editor, admin, suporte]
        avatarUrl:
          type: string
          format: uri
          nullable: true
        telefone:
          type: string
          nullable: true
        timezone:
          type: string
        ativo:
          type: boolean
        preferencias:
          $ref: '#/components/schemas/UsuarioPreferencias'
    Usuario:
      allOf:
        - $ref: '#/components/schemas/UsuarioBase'
        - type: object
          properties:
            id:
              type: string
            papeisSecundarios:
              type: array
              items:
                type: string
            ultimoAcesso:
              type: string
              format: date-time
            permissoes:
              type: array
              items:
                type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    UsuarioCreateInput:
      allOf:
        - $ref: '#/components/schemas/UsuarioBase'
        - type: object
          required:
            - nome
            - email
            - papel
            - senha
          properties:
            senha:
              type: string
              format: password
            enviarConvite:
              type: boolean
            permissoes:
              type: array
              items:
                type: string
    UsuarioUpdateInput:
      type: object
      properties:
        nome:
          type: string
        papel:
          type: string
          enum: [aluno, tutor, editor, admin, suporte]
        avatarUrl:
          type: string
          format: uri
          nullable: true
        telefone:
          type: string
          nullable: true
        timezone:
          type: string
        ativo:
          type: boolean
        preferencias:
          $ref: '#/components/schemas/UsuarioPreferencias'
        papeisSecundarios:
          type: array
          items:
            type: string
        permissoes:
          type: array
          items:
            type: string
    UsuarioPreferencias:
      type: object
      properties:
        notificacoesPush:
          type: boolean
        modoNoturnoPadrao:
          type: boolean
        metasPadrao:
          type: object
          properties:
            questoesSemana:
              type: integer
            horasSemana:
              type: number
              format: float
    PaginatedUsuarios:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Usuario'
        pagination:
          $ref: '#/components/schemas/Pagination'
    RelatorioProgresso:
      type: object
      properties:
        periodo:
          type: object
          properties:
            inicio:
              type: string
              format: date
            fim:
              type: string
              format: date
        totais:
          type: object
          properties:
            questoesResolvidas:
              type: integer
            acertos:
              type: integer
            horasEstudadas:
              type: number
              format: float
        evolucaoSemanal:
          type: array
          items:
            $ref: '#/components/schemas/RelatorioSerieTemporalPonto'
        topDisciplinas:
          type: array
          items:
            type: object
            properties:
              disciplinaId:
                type: string
              nome:
                type: string
              acertos:
                type: integer
              aproveitamento:
                type: number
                format: float
        simuladosRecentes:
          type: array
          items:
            type: object
            properties:
              simuladoId:
                type: string
              aproveitamento:
                type: number
                format: float
              concluidoEm:
                type: string
                format: date-time
    RelatorioEngajamento:
      type: object
      properties:
        referencia:
          type: string
        usuariosAtivos:
          type: integer
        novosCadastros:
          type: integer
        conversaoTrial:
          type: number
          format: float
        receitaRecorrenteMensal:
          type: number
          format: float
        churnMensal:
          type: number
          format: float
        engajamentoPorPlano:
          type: array
          items:
            type: object
            properties:
              planoId:
                type: string
              nomePlano:
                type: string
              usuarios:
                type: integer
              horasMedias:
                type: number
                format: float
        comparativoAnterior:
          type: object
          nullable: true
          properties:
            usuariosAtivosDelta:
              type: number
              format: float
            receitaDelta:
              type: number
              format: float
    RelatorioSerieTemporalPonto:
      type: object
      properties:
        periodo:
          type: string
        questoesResolvidas:
          type: integer
        acertos:
          type: integer
        horasEstudadas:
          type: number
          format: float
    WebhookPixEvent:
      type: object
      properties:
        evento:
          type: string
          enum: [pix.cobranca.confirmada, pix.cobranca.expirada, pix.cobranca.reconhecida]
        identificador:
          type: string
          description: Identificador único enviado pelo provedor Pix.
        payload:
          type: object
          properties:
            cobrancaId:
              type: string
            txid:
              type: string
            valor:
              type: number
              format: float
            codigoCopiaCola:
              type: string
            horarioPagamento:
              type: string
              format: date-time
              nullable: true
            pagador:
              type: object
              properties:
                nome:
                  type: string
                documento:
                  type: string
              additionalProperties: false
          additionalProperties: true
    Pagination:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        total:
          type: integer
  examples:
    HealthStatusResponse:
      summary: Estado consolidado dos serviços monitorados pelo Strapi
      value:
        status: ok
        timestamp: 2024-07-01T12:00:00Z
        services:
          database:
            status: up
            latencyMs: 12
          redis:
            status: disabled
          meilisearch:
            status: disabled
    DashboardHomeResponse:
      summary: Payload consolidado da home com dados sincronizados entre app e CMS
      externalValue: ./examples/dashboard_home.json
    QuestaoDetalhada:
      summary: Questão discursiva com feedback imediato
      value:
        id: qst-estrategia-2023-001
        enunciado: >-
          Uma assessoria de comunicação pública foi acionada para estruturar uma campanha
          emergencial sobre transparência e combate à desinformação. Com base nas boas
          práticas apresentadas na aula "Storytelling para órgãos públicos", qual deve ser
          o primeiro passo da equipe antes da produção das peças?
        alternativas:
          - letra: A
            texto: Criar imediatamente a identidade visual da campanha para ganhar tempo.
          - letra: B
            texto: Definir os canais de mídia paga e programar os disparos para as próximas 48 horas.
          - letra: C
            texto: Realizar entrevistas rápidas com o público interno e stakeholders para levantar dores e insights.
          - letra: D
            texto: Aprovar com o jurídico todas as peças previstas para o plano de mídia.
          - letra: E
            texto: Acionar influenciadores locais para gravarem depoimentos espontâneos.
        correta: C
        explicacao: >-
          Os materiais de referência destacam que a imersão rápida com os públicos-chave
          gera repertório para mensagens empáticas e relevantes. A produção visual e mídia
          devem ser calibradas somente após a validação desses aprendizados.
        dificuldade: medio
        ano: 2023
        disciplinaId: disc-comunicacao-estrategica
        assuntoIds:
          - assunto-storytelling-publico
          - assunto-gestao-crises
        bancaId: banca-fgv
        concursoId: concurso-secom-2024
        tags:
          - storytelling
          - transparencia
          - gestao-de-crises
        midia:
          - https://cdn.academiadacomunicacao.com/questoes/qst-estrategia-2023-001.png
        estatisticas:
          acertos: 1287
          erros: 643
          indiceDificuldade: 0.67
        createdAt: 2024-04-18T12:30:00Z
        updatedAt: 2024-05-02T08:15:00Z
    QuestaoInputCreate:
      summary: Payload de criação de questão objetiva
      value:
        enunciado: >-
          Durante o planejamento de um podcast institucional, qual métrica indica maior
          retenção do público e deve ser acompanhada semanalmente pelo time de analytics?
        alternativas:
          - letra: A
            texto: Número bruto de downloads por episódio.
          - letra: B
            texto: Percentual médio ouvido por episódio até o final.
          - letra: C
            texto: Quantidade de novos seguidores nas redes sociais do órgão.
          - letra: D
            texto: Total de menções ao podcast na imprensa especializada.
          - letra: E
            texto: Volume de acessos à página de inscrição da newsletter.
        correta: B
        explicacao: >-
          A taxa de conclusão revela se o conteúdo mantém a audiência atenta até o final,
          sinalizando qualidade narrativa e alinhamento com as expectativas do público.
        dificuldade: medio
        ano: 2024
        disciplinaId: disc-analise-dados
        assuntoIds:
          - assunto-metricas-audio
        bancaId: banca-cespe
        tags:
          - analytics
          - podcast
    QuestaoListaPaginada:
      summary: Lista paginada de questões no app
      value:
        data:
          - id: qst-estrategia-2023-001
            enunciado: >-
              Uma assessoria de comunicação pública foi acionada para estruturar uma campanha
              emergencial sobre transparência e combate à desinformação. Com base nas boas
              práticas apresentadas na aula "Storytelling para órgãos públicos", qual deve ser
              o primeiro passo da equipe antes da produção das peças?
            alternativas:
              - letra: A
                texto: Criar imediatamente a identidade visual da campanha para ganhar tempo.
              - letra: B
                texto: Definir os canais de mídia paga e programar os disparos para as próximas 48 horas.
              - letra: C
                texto: Realizar entrevistas rápidas com o público interno e stakeholders para levantar dores e insights.
              - letra: D
                texto: Aprovar com o jurídico todas as peças previstas para o plano de mídia.
              - letra: E
                texto: Acionar influenciadores locais para gravarem depoimentos espontâneos.
            correta: C
            dificuldade: medio
            ano: 2023
            disciplinaId: disc-comunicacao-estrategica
            assuntoIds:
              - assunto-storytelling-publico
              - assunto-gestao-crises
            bancaId: banca-fgv
            tags:
              - storytelling
              - transparencia
              - gestao-de-crises
            estatisticas:
              acertos: 1287
              erros: 643
              indiceDificuldade: 0.67
          - id: qst-redacao-2022-014
            enunciado: >-
              Em uma prova discursiva sobre comunicação inclusiva, qual elemento deve aparecer
              no parágrafo de fechamento para reforçar o compromisso institucional?
            alternativas:
              - letra: A
                texto: Uma citação de efeito retirada de um livro clássico de marketing.
              - letra: B
                texto: Dados quantitativos de campanhas passadas sem conexão com o tema.
              - letra: C
                texto: Reforço do plano de acompanhamento com indicadores e responsáveis claros.
              - letra: D
                texto: Agradecimento genérico aos avaliadores.
              - letra: E
                texto: Relato pessoal do candidato sobre experiências em outras áreas.
            correta: C
            dificuldade: facil
            ano: 2022
            disciplinaId: disc-redacao-oficial
            assuntoIds:
              - assunto-comunicacao-inclusiva
            bancaId: banca-cespe
            tags:
              - redacao-oficial
              - comunicacao-inclusiva
        pagination:
          page: 1
          pageSize: 20
          pageCount: 12
          total: 240
    SimuladoExpressAtivo:
      summary: Simulado express pronto para o aplicativo
      value:
        id: sim-express-2024-05
        nome: Simulado Express - Comunicação Institucional
        tipo: express
        distribuicao:
          comunicacao-estrategica: 8
          midias-digitais: 7
          legisla-cao: 5
        dificuldade: misto
        bancaId: banca-fgv
        numeroQuestoes: 20
        tempoMinutos: 30
        questaoIds:
          - qst-estrategia-2023-001
          - qst-redacao-2022-014
          - qst-analitica-2024-007
        status: ativo
        resultados:
          questoesRespondidas: 0
          acertos: 0
          erros: 0
          aproveitamento: 0
          rankingPosicao: null
        createdAt: 2024-05-10T09:00:00Z
        updatedAt: 2024-05-14T17:45:00Z
    SimuladoInputExpress:
      summary: Payload para criar simulado express
      value:
        nome: Simulado Express - Comunicação Institucional
        tipo: express
        distribuicao:
          comunicacao-estrategica: 8
          midias-digitais: 7
          legisla-cao: 5
        dificuldade: misto
        bancaId: banca-fgv
        numeroQuestoes: 20
        tempoMinutos: 30
        questaoIds:
          - qst-estrategia-2023-001
          - qst-redacao-2022-014
          - qst-analitica-2024-007
    SimuladoListaPaginada:
      summary: Lista paginada de simulados
      value:
        data:
          - id: sim-express-2024-05
            nome: Simulado Express - Comunicação Institucional
            tipo: express
            distribuicao:
              comunicacao-estrategica: 8
              midias-digitais: 7
              legisla-cao: 5
            dificuldade: misto
            bancaId: banca-fgv
            numeroQuestoes: 20
            tempoMinutos: 30
            questaoIds:
              - qst-estrategia-2023-001
              - qst-redacao-2022-014
              - qst-analitica-2024-007
            status: ativo
            resultados:
              questoesRespondidas: 0
              acertos: 0
              erros: 0
              aproveitamento: 0
              rankingPosicao: null
            createdAt: 2024-05-10T09:00:00Z
            updatedAt: 2024-05-14T17:45:00Z
          - id: sim-manual-2024-01
            nome: Simulado Avançado - Preparatório SECOM
            tipo: manual
            distribuicao:
              comunicacao-estrategica: 12
              midias-digitais: 8
              legisla-cao: 10
            dificuldade: dificil
            bancaId: banca-cespe
            numeroQuestoes: 30
            tempoMinutos: 60
            questaoIds:
              - qst-redacao-2022-014
              - qst-legislacao-2021-003
            status: ativo
            resultados:
              questoesRespondidas: 18
              acertos: 12
              erros: 6
              aproveitamento: 0.66
              rankingPosicao: 48
            createdAt: 2024-04-25T10:30:00Z
            updatedAt: 2024-05-12T16:05:00Z
        pagination:
          page: 1
          pageSize: 10
          pageCount: 3
          total: 28
    SimuladoResultadoPosProva:
      summary: Resultado pós-prova com ranking
      value:
        questoesRespondidas: 20
        acertos: 16
        erros: 4
        aproveitamento: 0.8
        rankingPosicao: 12
    DesafioGamificadoAtivo:
      summary: Desafio coletivo inspirado nos prints do app
      value:
        id: desafio-meta-maio
        nome: Maratona Comunicação Sem Fake News
        descricao: >-
          Complemente 200 questões de verificação de fatos em 7 dias e suba no ranking semanal.
        organizadorId: user-tutor-marina
        regras: >-
          Cada acerto vale 5 pontos. Penalidade de -2 pontos por questão pulada. Ranking atualizado diariamente.
        inicio: 2024-05-13T08:00:00Z
        fim: 2024-05-20T23:59:59Z
        premios: Mentoria coletiva com especialistas + kit de estudos exclusivo.
        maxParticipantes: 500
        status: ativo
        participantes:
          - userId: user-joao
            apelido: João Jornalista
            pontos: 185
          - userId: user-ana
            apelido: Ana Estratégica
            pontos: 172
          - userId: user-camila
            apelido: Camila Conteúdo
            pontos: 168
        createdAt: 2024-05-05T10:12:00Z
        updatedAt: 2024-05-15T07:40:00Z
    DesafioInputGamificado:
      summary: Payload para criar desafio comunitário
      value:
        nome: Maratona Comunicação Sem Fake News
        descricao: >-
          Complemente 200 questões de verificação de fatos em 7 dias e suba no ranking semanal.
        organizadorId: user-tutor-marina
        regras: >-
          Cada acerto vale 5 pontos. Penalidade de -2 pontos por questão pulada. Ranking atualizado diariamente.
        inicio: 2024-05-13T08:00:00Z
        fim: 2024-05-20T23:59:59Z
        premios: Mentoria coletiva com especialistas + kit de estudos exclusivo.
        maxParticipantes: 500
    DesafioListaPaginada:
      summary: Lista paginada de desafios comunitários
      value:
        data:
          - id: desafio-meta-maio
            nome: Maratona Comunicação Sem Fake News
            descricao: >-
              Complemente 200 questões de verificação de fatos em 7 dias e suba no ranking semanal.
            organizadorId: user-tutor-marina
            regras: >-
              Cada acerto vale 5 pontos. Penalidade de -2 pontos por questão pulada. Ranking atualizado diariamente.
            inicio: 2024-05-13T08:00:00Z
            fim: 2024-05-20T23:59:59Z
            premios: Mentoria coletiva com especialistas + kit de estudos exclusivo.
            maxParticipantes: 500
            status: ativo
            participantes:
              - userId: user-joao
                apelido: João Jornalista
                pontos: 185
              - userId: user-ana
                apelido: Ana Estratégica
                pontos: 172
            createdAt: 2024-05-05T10:12:00Z
            updatedAt: 2024-05-15T07:40:00Z
          - id: desafio-nps-junho
            nome: Sprint Conteúdo Humanizado
            descricao: >-
              Resolva 120 questões sobre atendimento empático e entregue feedbacks NPS acima de 9.
            organizadorId: user-tutor-caio
            regras: >-
              Questões corretas somam 4 pontos; feedbacks NPS enviados valem 1 ponto extra.
            inicio: 2024-06-01T08:00:00Z
            fim: 2024-06-07T23:59:59Z
            premios: Bolsa integral no curso Narrativas Digitais.
            maxParticipantes: 300
            status: rascunho
            participantes: []
            createdAt: 2024-05-20T12:00:00Z
            updatedAt: 2024-05-20T12:00:00Z
        pagination:
          page: 1
          pageSize: 10
          pageCount: 1
          total: 2
    DesafioRankingAtualizado:
      summary: Ranking parcial do desafio
      value:
        desafioId: desafio-meta-maio
        ranking:
          - userId: user-joao
            apelido: João Jornalista
            pontos: 185
          - userId: user-ana
            apelido: Ana Estratégica
            pontos: 172
          - userId: user-camila
            apelido: Camila Conteúdo
            pontos: 168
    MetaEstudosGamificada:
      summary: Meta semanal de questões resolvidas
      value:
        id: meta-semanal-questoes
        tipo: questoes
        alvo: 150
        janela: semanal
        inicio: 2024-05-13T00:00:00Z
        fim: 2024-05-19T23:59:59Z
        progressoAtual: 45
        status: ativo
        createdAt: 2024-05-12T18:45:00Z
        updatedAt: 2024-05-15T09:20:00Z
    MetaInputGamificada:
      summary: Payload para criar meta semanal de questões
      value:
        tipo: questoes
        alvo: 150
        janela: semanal
        inicio: 2024-05-13T00:00:00Z
        fim: 2024-05-19T23:59:59Z
    MetaListaPaginada:
      summary: Metas ativas do aluno
      value:
        data:
          - id: meta-semanal-questoes
            tipo: questoes
            alvo: 150
            janela: semanal
            inicio: 2024-05-13T00:00:00Z
            fim: 2024-05-19T23:59:59Z
            progressoAtual: 45
            status: ativo
            createdAt: 2024-05-12T18:45:00Z
            updatedAt: 2024-05-15T09:20:00Z
          - id: meta-diaria-flashcards
            tipo: horas
            alvo: 2
            janela: diario
            inicio: 2024-05-15T00:00:00Z
            fim: 2024-05-15T23:59:59Z
            progressoAtual: 1.5
            status: ativo
            createdAt: 2024-05-14T21:00:00Z
            updatedAt: 2024-05-15T09:30:00Z
        pagination:
          page: 1
          pageSize: 10
          pageCount: 1
          total: 2
    PlanosDisponiveis:
      summary: Planos pagos e gratuitos prontos para o app
      value:
        - id: plano-mensal-plus
          nome: Mensal Plus
          tipo: pago
          periodicidade: mensal
          preco: 49.9
          moeda: BRL
          chavePix: pix@academiadacomunicacao.com
          beneficios:
            - Questões ilimitadas
            - Simulados express toda semana
            - Ranking avançado por banca
          statusAprovacao: aprovado
          aprovadoPor: user-gestora-luiza
          aprovadoEm: 2024-05-20T14:25:00Z
          createdAt: 2024-04-10T12:00:00Z
          updatedAt: 2024-05-20T14:25:00Z
        - id: plano-gratuito-jornalismo
          nome: Plano Grátis para Alunos - Jornalismo Digital
          tipo: gratis_aluno
          periodicidade: mensal
          preco: 0
          moeda: BRL
          chavePix: null
          beneficios:
            - Trilhas introdutórias curadas por tutores
            - Questões liberadas semanalmente
            - Painel de desempenho básico
          statusAprovacao: pendente
          aprovadoPor: null
          aprovadoEm: null
          createdAt: 2024-05-21T09:30:00Z
          updatedAt: 2024-05-21T09:30:00Z
    PlanoPagoInput:
      summary: Criação de plano pago
      value:
        nome: Mensal Plus
        tipo: pago
        periodicidade: mensal
        preco: 49.9
        moeda: BRL
        chavePix: pix@academiadacomunicacao.com
        beneficios:
          - Questões ilimitadas
          - Simulados express toda semana
          - Ranking avançado por banca
    PlanoGratisAlunoInput:
      summary: Criação de Plano Grátis para Alunos
      value:
        nome: Plano Grátis para Alunos - Jornalismo Digital
        tipo: gratis_aluno
        periodicidade: mensal
        beneficios:
          - Trilhas introdutórias curadas por tutores
          - Questões liberadas semanalmente
          - Painel de desempenho básico
    PlanoPagoCriado:
      summary: Plano pago após criação
      value:
        id: plano-mensal-plus
        nome: Mensal Plus
        tipo: pago
        periodicidade: mensal
        preco: 49.9
        moeda: BRL
        chavePix: pix@academiadacomunicacao.com
        beneficios:
          - Questões ilimitadas
          - Simulados express toda semana
          - Ranking avançado por banca
        statusAprovacao: aprovado
        aprovadoPor: user-gestora-luiza
        aprovadoEm: 2024-05-20T14:25:00Z
        createdAt: 2024-04-10T12:00:00Z
        updatedAt: 2024-05-20T14:25:00Z
    PlanoGratisAlunoCriado:
      summary: Plano Grátis para Alunos aguardando aprovação
      value:
        id: plano-gratuito-jornalismo
        nome: Plano Grátis para Alunos - Jornalismo Digital
        tipo: gratis_aluno
        periodicidade: mensal
        preco: 0
        moeda: BRL
        chavePix: null
        beneficios:
          - Trilhas introdutórias curadas por tutores
          - Questões liberadas semanalmente
          - Painel de desempenho básico
        statusAprovacao: pendente
        aprovadoPor: null
        aprovadoEm: null
        createdAt: 2024-05-21T09:30:00Z
        updatedAt: 2024-05-21T09:30:00Z
    PlanoAtualizacaoPreco:
      summary: Ajuste de preço via dashboard admin
      value:
        preco: 59.9
        beneficios:
          - Questões ilimitadas
          - Simulados express toda semana
          - Ranking avançado por banca
          - Mentorias mensais ao vivo
    PlanoGratisAlunoAprovado:
      summary: Plano Grátis para Alunos aprovado pelo super admin
      value:
        id: plano-gratuito-jornalismo
        nome: Plano Grátis para Alunos - Jornalismo Digital
        tipo: gratis_aluno
        periodicidade: mensal
        preco: 0
        moeda: BRL
        chavePix: null
        beneficios:
          - Trilhas introdutórias curadas por tutores
          - Questões liberadas semanalmente
          - Painel de desempenho básico
        statusAprovacao: aprovado
        aprovadoPor: user-superadmin-joana
        aprovadoEm: 2024-05-22T11:05:00Z
        createdAt: 2024-05-21T09:30:00Z
        updatedAt: 2024-05-22T11:05:00Z
    PlanoPrecoUpdateInput:
      summary: Atualização pontual de preço via dashboard
      value:
        preco: 64.9
        moeda: BRL
        motivo: Ajuste após inclusão de mentorias semanais
    PlanoPagoAtualizadoPreco:
      summary: Plano pago com preço ajustado e auditoria registrada
      value:
        id: plano-mensal-plus
        nome: Mensal Plus
        tipo: pago
        periodicidade: mensal
        preco: 64.9
        moeda: BRL
        chavePix: pix@academiadacomunicacao.com
        beneficios:
          - Questões ilimitadas
          - Simulados express toda semana
          - Ranking avançado por banca
          - Mentorias mensais ao vivo
        statusAprovacao: aprovado
        aprovadoPor: user-gestora-luiza
        aprovadoEm: 2024-05-20T14:25:00Z
        createdAt: 2024-04-10T12:00:00Z
        updatedAt: 2024-05-28T10:12:00Z
    PlanosDashboardResumo:
      summary: Indicadores do dashboard de planos
      value:
        totalPlanosPagos: 4
        totalPlanosGratuitos: 2
        pendentesAprovacao: 1
        ultimoAjuste:
          planoId: plano-mensal-plus
          nomePlano: Mensal Plus
          atualizadoPor: user-gestora-luiza
          atualizadoEm: 2024-05-28T10:12:00Z
          precoAtual: 64.9
          moeda: BRL
        historicoPrecos:
          - planoId: plano-mensal-plus
            nomePlano: Mensal Plus
            atualizadoPor: user-gestora-luiza
            atualizadoEm: 2024-05-28T10:12:00Z
            precoAnterior: 59.9
            precoAtual: 64.9
            moeda: BRL
            motivo: Ajuste após inclusão de mentorias semanais
          - planoId: plano-anual-premium
            nomePlano: Anual Premium
            atualizadoPor: user-financeiro-rafael
            atualizadoEm: 2024-05-15T16:40:00Z
            precoAnterior: 499.0
            precoAtual: 529.0
            moeda: BRL
            motivo: Correção inflacionária e novos cursos bônus
        planos:
          - id: plano-mensal-plus
            nome: Mensal Plus
            tipo: pago
            periodicidade: mensal
            preco: 64.9
            moeda: BRL
            statusAprovacao: aprovado
            updatedAt: 2024-05-28T10:12:00Z
          - id: plano-gratuito-jornalismo
            nome: Plano Grátis para Alunos - Jornalismo Digital
            tipo: gratis_aluno
            periodicidade: mensal
            preco: 0
            moeda: BRL
            statusAprovacao: pendente
            updatedAt: 2024-05-21T09:30:00Z
    PixCobrancaInput:
      summary: Dados para gerar cobrança Pix
      value:
        planoId: plano-mensal-plus
        usuarioId: user-ana-ribeiro
        valor: 64.9
        expiracaoMinutos: 45
        nomePagador: Ana Paula Ribeiro
        documentoPagador: 12345678909
        pagador:
          nome: Ana Paula Ribeiro
          documento: 12345678909
          email: ana.paula@academia.com
          telefone: +55 11 99888-7766
        metadata:
          origem: app-mobile
    PixCobrancaPendente:
      summary: Cobrança Pix aguardando pagamento
      value:
        id: cob_8f32c1
        txid: TX123ABC456
        planoId: plano-mensal-plus
        assinaturaId: null
        usuarioId: user-ana-ribeiro
        valor: 64.9
        moeda: BRL
        status: pendente
        codigoCopiaCola: 00020101021226890014BR.GOV.BCB.PIX2563qrcodes.academia.com/qr/9f1a8b70abbf5203040005303986540639.905802BR5925Academia da Comunicação6009SAO PAULO62070503***6304A13B
        chavePix: pix@academia.com.br
        qrCode:
          url: https://cdn.academia.com/pix/cob_8f32c1.png
          base64: iVBORw0KGgoAAAANSUhEUgAA...
        expiraEm: 2024-05-24T23:59:59Z
        confirmadoEm: null
        expiradoEm: null
        canceladoEm: null
        pagador:
          nome: Ana Paula Ribeiro
          documento: 12345678909
          email: ana.paula@academia.com
          telefone: +55 11 99888-7766
        metadata:
          origem: app-mobile
        criadoEm: 2024-05-24T20:00:00Z
        atualizadoEm: 2024-05-24T20:00:00Z
    PixCobrancaPago:
      summary: Cobrança Pix confirmada e vinculada à assinatura
      value:
        id: cob_8f32c1
        txid: TX123ABC456
        planoId: plano-mensal-plus
        assinaturaId: assinatura-ana-pix
        usuarioId: user-ana-ribeiro
        valor: 64.9
        moeda: BRL
        status: confirmado
        codigoCopiaCola: 00020101021226890014BR.GOV.BCB.PIX2563qrcodes.academia.com/qr/9f1a8b70abbf5203040005303986540639.905802BR5925Academia da Comunicação6009SAO PAULO62070503***6304A13B
        chavePix: pix@academia.com.br
        qrCode:
          url: https://cdn.academia.com/pix/cob_8f32c1.png
          base64: iVBORw0KGgoAAAANSUhEUgAA...
        expiraEm: 2024-05-24T23:59:59Z
        confirmadoEm: 2024-05-24T20:10:30Z
        expiradoEm: null
        canceladoEm: null
        pagador:
          nome: Ana Paula Ribeiro
          documento: 12345678909
          email: ana.paula@academia.com
          telefone: +55 11 99888-7766
        metadata:
          origem: app-mobile
        criadoEm: 2024-05-24T20:00:00Z
        atualizadoEm: 2024-05-24T20:10:32Z
    PixCobrancaExpirada:
      summary: Cobrança Pix expirada aguardando nova emissão
      value:
        id: cob_5c11aa
        txid: TX111FREE000
        planoId: plano-mensal-plus
        assinaturaId: assinatura-ana-pix
        usuarioId: user-ana-ribeiro
        valor: 64.9
        moeda: BRL
        status: expirado
        codigoCopiaCola: 00020101021226890014BR.GOV.BCB.PIX2563qrcodes.academia.com/qr/1b34ad5c00ff8d03040005303986540639.905802BR5925Academia da Comunicação6009SAO PAULO62070503***6304C55D
        chavePix: pix@academia.com.br
        qrCode:
          url: https://cdn.academia.com/pix/cob_5c11aa.png
          base64: iVBORw0KGgoAAAANSUhEUgAA...
        expiraEm: 2024-05-02T23:59:59Z
        confirmadoEm: null
        expiradoEm: 2024-05-03T00:00:00Z
        canceladoEm: null
        pagador:
          nome: Ana Paula Ribeiro
          documento: 12345678909
          email: ana.paula@academia.com
          telefone: +55 11 99888-7766
        metadata:
          origem: app-mobile
        criadoEm: 2024-05-01T10:00:00Z
        atualizadoEm: 2024-05-03T08:30:00Z
        observacoes: Reemissão necessária após expiração automática em 30 minutos
    PixChavePrincipal:
      summary: Chave Pix principal configurada com código copia e cola e QR Code
      externalValue: ./examples/pix_chave_principal.json
    AssinaturasListaAdmin:
      summary: Lista paginada com assinaturas Pix e Planos Grátis para Alunos
      externalValue: ./examples/assinaturas_pix.json
    WebhookPixPagamentoConfirmado:
      summary: Evento de confirmação Pix recebido
      value:
        evento: pix.cobranca.confirmada
        identificador: EVT-PIX-20240524-001
        payload:
          cobrancaId: cob_8f32c1
          txid: TX123ABC456
          valor: 64.9
          codigoCopiaCola: 00020101021226890014BR.GOV.BCB.PIX2563qrcodes.academia.com/qr/9f1a8b70abbf5203040005303986540639.905802BR5925Academia da Comunicação6009SAO PAULO62070503***6304A13B
          horarioPagamento: 2024-05-24T20:10:30Z
          pagador:
            nome: Ana Paula Ribeiro
            documento: 12345678909
          assinaturaId: assinatura-ana-pix
    NpsPesquisasLista:
      summary: Pesquisas NPS visíveis no CMS
      value:
        data:
          - id: nps-planos-abril
            titulo: Satisfação com os Planos Premium
            contexto: planos
            descricao: Avalia a percepção dos upgrades de benefícios lançados neste mês.
            status: ativa
            scoreAtual: 62.5
            totalRespostas: 128
            promotores: 60
            neutros: 40
            detratores: 28
            janela:
              inicio: 2024-04-01T12:00:00Z
              fim: 2024-04-30T23:59:59Z
            perguntas:
              - id: nps-planos-q1
                tipo: nota
                titulo: Qual a probabilidade de você recomendar nossos planos pagos?
                obrigatoria: true
                ordem: 1
              - id: nps-planos-q2
                tipo: texto
                titulo: O que mais impactou sua decisão de manter a assinatura?
                descricao: Conte-nos pontos positivos ou negativos do plano escolhido.
                obrigatoria: false
                ordem: 2
            createdAt: 2024-03-25T18:40:00Z
            updatedAt: 2024-05-24T10:15:00Z
          - id: nps-onboarding-junho
            titulo: Experiência de onboarding nos primeiros 7 dias
            contexto: onboarding
            descricao: Pesquisa enviada após o aluno concluir o onboarding inicial.
            status: agendada
            gatilhos:
              evento: onboarding_concluido
              atrasoDias: 3
            perguntas:
              - id: nps-onboarding-q1
                tipo: nota
                titulo: Qual a probabilidade de recomendar nosso app após o onboarding?
                obrigatoria: true
                ordem: 1
              - id: nps-onboarding-q2
                tipo: texto
                titulo: Qual etapa do onboarding poderia ser melhorada?
                obrigatoria: false
                ordem: 2
            segmentacao:
              minimoDiasAtivo: 0
            createdAt: 2024-05-22T09:00:00Z
            updatedAt: 2024-05-22T09:00:00Z
        pagination:
          page: 1
          pageSize: 20
          pageCount: 1
          total: 2
    NpsPesquisaCreate:
      summary: Configuração de pesquisa NPS pós-onboarding
      value:
        titulo: Primeiros 7 dias de uso
        contexto: onboarding
        descricao: Queremos entender os pontos fortes e gargalos do onboarding inicial.
        status: agendada
        gatilhos:
          evento: onboarding_concluido
          atrasoDias: 3
        segmentacao:
          planoIds:
            - plano-mensal-plus
          minimoDiasAtivo: 0
        perguntas:
          - tipo: nota
            titulo: Qual a probabilidade de recomendar nosso app após o onboarding?
            obrigatoria: true
            ordem: 1
          - tipo: texto
            titulo: O que podemos fazer para melhorar os primeiros dias de estudo?
            descricao: Compartilhe feedbacks livres sobre fluxos, telas e conteúdos.
            obrigatoria: false
            ordem: 2
    NpsPesquisaDetalhe:
      summary: Pesquisa NPS ativa com métricas consolidadas
      value:
        id: nps-planos-abril
        titulo: Satisfação com os Planos Premium
        contexto: planos
        descricao: Avalia a percepção dos upgrades de benefícios lançados neste mês.
        status: ativa
        scoreAtual: 62.5
        totalRespostas: 128
        promotores: 60
        neutros: 40
        detratores: 28
        gatilhos:
          evento: upgrade_plano
          atrasoDias: 2
        janela:
          inicio: 2024-04-01T12:00:00Z
          fim: 2024-04-30T23:59:59Z
        segmentacao:
          planoIds:
            - plano-mensal-plus
            - plano-anual-premium
          tagsUsuarios:
            - experimentou-simulados
        perguntas:
          - id: nps-planos-q1
            tipo: nota
            titulo: Qual a probabilidade de você recomendar nossos planos pagos?
            obrigatoria: true
            ordem: 1
          - id: nps-planos-q2
            tipo: texto
            titulo: O que mais impactou sua decisão de manter a assinatura?
            descricao: Conte-nos pontos positivos ou negativos do plano escolhido.
            obrigatoria: false
            ordem: 2
        createdAt: 2024-03-25T18:40:00Z
        updatedAt: 2024-05-24T10:15:00Z
    NpsPesquisaUpdate:
      summary: Ajustes na janela e segmentação da pesquisa NPS
      value:
        status: ativa
        janela:
          inicio: 2024-04-05T12:00:00Z
          fim: 2024-05-05T23:59:59Z
        segmentacao:
          planoIds:
            - plano-mensal-plus
            - plano-anual-premium
          tagsUsuarios:
            - experimentou-simulados
            - completou-desafio
    NpsRespostasLista:
      summary: Respostas coletadas para a pesquisa NPS de planos
      value:
        data:
          - id: nps-resp-9834
            pesquisaId: nps-planos-abril
            nota: 9
            comentario: Amo as trilhas guiadas e o suporte rápido pelo chat.
            canal: app
            tags:
              - elogio-beneficios
            usuario:
              id: user-larissa
              nome: Larissa Prado
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/larissa.png
            registradaEm: 2024-04-18T14:32:00Z
          - id: nps-resp-9841
            pesquisaId: nps-planos-abril
            nota: 5
            comentario: Poderiam liberar mais simulados para o plano mensal.
            canal: app
            tags:
              - sugestao-simulados
            usuario:
              id: user-carlos
              nome: Carlos Duarte
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/carlos.png
            registradaEm: 2024-04-19T09:05:00Z
        pagination:
          page: 1
          pageSize: 50
          pageCount: 3
          total: 124
    NpsRespostaSubmit:
      summary: Payload enviado pelo app ao responder pesquisa NPS
      value:
        nota: 8
        comentario: Interface linda, só senti falta de mais questões discursivas.
        canal: app
        tags:
          - elogio-interface
          - sugestao-discursivas
    NpsRespostaSubmitResponse:
      summary: Retorno após salvar resposta NPS
      value:
        id: nps-resp-9920
        pesquisaId: nps-planos-abril
        nota: 8
        comentario: Interface linda, só senti falta de mais questões discursivas.
        canal: app
        tags:
          - elogio-interface
          - sugestao-discursivas
        usuario:
          id: user-juliana
          nome: Juliana Azevedo
          avatarUrl: https://cdn.academiadacomunicacao.com/avatars/juliana.png
        registradaEm: 2024-05-24T18:12:00Z
    NpsPainelResumo:
      summary: Indicadores agregados do módulo NPS
      value:
        periodoReferencia: últimos 30 dias
        scoreAtual: 64.2
        classificacao: neutro
        amostra: 212
        promotores: 118
        neutros: 54
        detratores: 40
        tendenciaScore:
          - periodo: 2024-03
            score: 55.0
          - periodo: 2024-04
            score: 60.5
          - periodo: 2024-05
            score: 64.2
        ultimasRespostas:
          - id: nps-resp-9920
            pesquisaId: nps-planos-abril
            nota: 8
            comentario: Interface linda, só senti falta de mais questões discursivas.
            canal: app
            tags:
              - elogio-interface
              - sugestao-discursivas
            usuario:
              id: user-juliana
              nome: Juliana Azevedo
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/juliana.png
            registradaEm: 2024-05-24T18:12:00Z
          - id: nps-resp-9917
            pesquisaId: nps-planos-abril
            nota: 10
            comentario: Os simulados semanais elevaram meu desempenho!
            canal: app
            tags:
              - elogio-simulados
            usuario:
              id: user-fernanda
              nome: Fernanda Costa
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/fernanda.png
            registradaEm: 2024-05-24T16:48:00Z
    ComunidadePerguntaDetalhada:
      summary: Pergunta destacada na comunidade com engajamento
      value:
        id: perg-com-estrategia-001
        titulo: Como aplicar storytelling em campanhas contra desinformação?
        corpo: >-
          Quais passos práticos vocês adotam antes de montar o roteiro das peças para
          campanhas emergenciais voltadas à transparência? Alguma dica para alinhar com
          a assessoria jurídica sem perder agilidade?
        disciplinaId: disc-comunicacao-estrategica
        tags:
          - storytelling
          - combate-a-desinformacao
        status: publicada
        visibilidade: publica
        fixadaNoTopo: false
        permitirRespostaAnonima: false
        autor:
          id: user-ana-executiva
          nome: Ana Lima
          avatarUrl: https://cdn.academiadacomunicacao.com/avatars/ana-lima.png
        metricas:
          respostas: 4
          curtidas: 87
          visualizacoes: 1280
        melhorRespostaId: resp-com-estrategia-002
        respondidaEm: 2024-05-21T16:42:00Z
        ultimaInteracaoEm: 2024-05-23T10:35:00Z
        createdAt: 2024-05-20T14:10:00Z
        updatedAt: 2024-05-23T10:35:00Z
    ComunidadePerguntaCreate:
      summary: Payload para cadastrar nova pergunta na comunidade
      value:
        titulo: Boas práticas de media training remoto?
        corpo: >-
          Estamos treinando porta-vozes em diferentes fusos e precisamos manter a
          consistência do discurso. Como vocês estruturam os materiais pré e pós-sessão?
        disciplinaId: disc-media-training
        tags:
          - media-training
          - porta-vozes
        status: publicada
        visibilidade: publica
        permitirRespostaAnonima: false
    ComunidadePerguntaUpdate:
      summary: Ajuste editorial em pergunta existente
      value:
        titulo: Como preparar porta-vozes para entrevistas remotas?
        status: publicada
        fixadaNoTopo: true
        tags:
          - media-training
          - entrevista-remota
    ComunidadePerguntasLista:
      summary: Perguntas paginadas exibidas no hub social
      value:
        data:
          - id: perg-com-estrategia-001
            titulo: Como aplicar storytelling em campanhas contra desinformação?
            corpo: >-
              Quais passos práticos vocês adotam antes de montar o roteiro das peças para
              campanhas emergenciais?
            disciplinaId: disc-comunicacao-estrategica
            tags:
              - storytelling
              - combate-a-desinformacao
            status: publicada
            visibilidade: publica
            fixadaNoTopo: false
            permitirRespostaAnonima: false
            autor:
              id: user-ana-executiva
              nome: Ana Lima
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/ana-lima.png
            metricas:
              respostas: 4
              curtidas: 87
              visualizacoes: 1280
            melhorRespostaId: resp-com-estrategia-002
            respondidaEm: 2024-05-21T16:42:00Z
            ultimaInteracaoEm: 2024-05-23T10:35:00Z
            createdAt: 2024-05-20T14:10:00Z
            updatedAt: 2024-05-23T10:35:00Z
          - id: perg-midias-sociais-009
            titulo: Checklist para lives interativas em múltiplos canais?
            corpo: >-
              Como vocês sincronizam chat moderado, perguntas e disparos de CTA em lives
              simultâneas no YouTube, Instagram e LinkedIn?
            disciplinaId: disc-midias-digitais
            tags:
              - live
              - multiplataforma
            status: publicada
            visibilidade: publica
            fixadaNoTopo: true
            permitirRespostaAnonima: false
            autor:
              id: user-carlos-pro
              nome: Carlos Mendes
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/carlos-mendes.png
            metricas:
              respostas: 6
              curtidas: 54
              visualizacoes: 940
            melhorRespostaId: null
            respondidaEm: null
            ultimaInteracaoEm: 2024-05-22T19:05:00Z
            createdAt: 2024-05-19T10:05:00Z
            updatedAt: 2024-05-22T19:05:00Z
        pagination:
          page: 1
          pageSize: 10
          pageCount: 5
          total: 42
    ComunidadeRespostaCreate:
      summary: Payload para responder pergunta da comunidade
      value:
        corpo: >-
          Recomendo começar com um briefing colaborativo envolvendo jurídico e comunicação.
          Definimos perguntas-chave, aprovamos mensagens-guia e só então desenhamos as peças.
        fontesComplementares:
          - https://cdn.academiadacomunicacao.com/modelos/briefing-crise.pdf
        status: publicada
        aceita: false
    ComunidadeRespostaDetalhada:
      summary: Resposta marcada como solução
      value:
        id: resp-com-estrategia-002
        corpo: >-
          Nosso protocolo inclui entrevistas rápidas com stakeholders, matriz de mensagens
          com cenários "se/então" e aprovação assíncrona via painel. Assim mantemos agilidade
          e alinhamento jurídico.
        fontesComplementares:
          - https://cdn.academiadacomunicacao.com/modelos/roteiro-transparencia.docx
        status: publicada
        aceita: true
        autor:
          id: tutor-lucas
          nome: Lucas Prado
          avatarUrl: https://cdn.academiadacomunicacao.com/avatars/lucas-prado.png
        curtidas: 34
        createdAt: 2024-05-21T17:05:00Z
        updatedAt: 2024-05-22T09:15:00Z
    ComunidadeRespostasLista:
      summary: Respostas ordenadas pela curadoria
      value:
        data:
          - id: resp-com-estrategia-002
            corpo: >-
              Nosso protocolo inclui entrevistas rápidas com stakeholders, matriz de mensagens
              com cenários "se/então" e aprovação assíncrona via painel.
            fontesComplementares:
              - https://cdn.academiadacomunicacao.com/modelos/roteiro-transparencia.docx
            status: publicada
            aceita: true
            autor:
              id: tutor-lucas
              nome: Lucas Prado
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/lucas-prado.png
            curtidas: 34
            createdAt: 2024-05-21T17:05:00Z
            updatedAt: 2024-05-22T09:15:00Z
          - id: resp-com-estrategia-003
            corpo: >-
              Complementando: usamos checklist de aprovações no Notion e notificações no app
              para avisar tutores quando há novas respostas aguardando revisão.
            fontesComplementares: []
            status: publicada
            aceita: false
            autor:
              id: user-marina-aluna
              nome: Marina Costa
              avatarUrl: https://cdn.academiadacomunicacao.com/avatars/marina-costa.png
            curtidas: 12
            createdAt: 2024-05-21T18:45:00Z
            updatedAt: 2024-05-23T08:40:00Z
        pagination:
          page: 1
          pageSize: 5
          pageCount: 1
          total: 2
    ComunidadeRespostaUpdate:
      summary: Ajuste de resposta marcado como solução
      value:
        aceita: true
        status: publicada
        fontesComplementares:
          - https://cdn.academiadacomunicacao.com/modelos/roteiro-transparencia.docx
    SuporteTicketCreate:
      summary: Payload de abertura de ticket pelo app
      value:
        assunto: Erro ao finalizar simulado express
        descricao: >-
          Ao concluir o simulado express "Comunicação Institucional" recebo uma tela em branco
          e não vejo o relatório. Já reinstalei o app e o problema continua.
        categoria: simulados
        prioridade: alta
        canalOrigem: app
        anexos:
          - https://cdn.academiadacomunicacao.com/suporte/captura-simulado.png
        tags:
          - bug
          - simulado
    SuporteTicketAberto:
      summary: Ticket de suporte em atendimento
      value:
        id: ticket-2024-0589
        assunto: Erro ao finalizar simulado express
        descricao: >-
          Ao concluir o simulado express "Comunicação Institucional" recebo uma tela em branco
          e não vejo o relatório. Já reinstalei o app e o problema continua.
        categoria: simulados
        prioridade: alta
        canalOrigem: app
        anexos:
          - https://cdn.academiadacomunicacao.com/suporte/captura-simulado.png
        tags:
          - bug
          - simulado
        status: em_andamento
        solicitante:
          id: user-marina-aluna
          nome: Marina Costa
          email: marina.costa@email.com
        responsavel:
          id: suporte-lucas
          nome: Lucas Prado
        slaLimite: 2024-05-23T18:00:00Z
        createdAt: 2024-05-22T12:15:00Z
        updatedAt: 2024-05-22T13:40:00Z
        fechadoEm: null
    SuporteTicketsLista:
      summary: Tickets paginados para o painel de suporte
      value:
        data:
          - id: ticket-2024-0589
            assunto: Erro ao finalizar simulado express
            categoria: simulados
            prioridade: alta
            status: em_andamento
            canalOrigem: app
            createdAt: 2024-05-22T12:15:00Z
            updatedAt: 2024-05-22T13:40:00Z
            solicitante:
              id: user-marina-aluna
              nome: Marina Costa
          - id: ticket-2024-0590
            assunto: Dúvida sobre plano anual
            categoria: assinaturas
            prioridade: media
            status: aberto
            canalOrigem: chat
            createdAt: 2024-05-22T13:05:00Z
            updatedAt: 2024-05-22T13:05:00Z
            solicitante:
              id: user-ricardo
              nome: Ricardo Souza
        pagination:
          page: 1
          pageSize: 20
          pageCount: 3
          total: 47
    SuporteTicketUpdate:
      summary: Atualização de status e SLA pelo suporte
      value:
        status: resolvido
        responsavelId: suporte-lucas
        slaLimite: 2024-05-23T18:00:00Z
        tags:
          - bug
          - resolvido
    SuporteTicketTimeline:
      summary: Linha do tempo de interações do ticket
      value:
        - id: interacao-001
          autor:
            id: user-marina-aluna
            nome: Marina Costa
            papel: aluno
          tipo: mensagem
          mensagem: Enviei a captura de tela mostrando o erro.
          privado: false
          anexos:
            - https://cdn.academiadacomunicacao.com/suporte/captura-simulado.png
          createdAt: 2024-05-22T12:16:00Z
        - id: interacao-002
          autor:
            id: suporte-lucas
            nome: Lucas Prado
            papel: suporte
          tipo: mensagem
          mensagem: Já encaminhei para o time de produto e aviso assim que tivermos correção.
          privado: false
          anexos: []
          createdAt: 2024-05-22T12:40:00Z
        - id: interacao-003
          autor:
            id: suporte-lucas
            nome: Lucas Prado
            papel: suporte
          tipo: nota_interna
          mensagem: Reproduzido no Android 14. Aberto bugfix na sprint atual.
          privado: true
          anexos: []
          createdAt: 2024-05-22T12:45:00Z
    SuporteInteracaoCreate:
      summary: Payload para adicionar resposta pública no ticket
      value:
        mensagem: Correção aplicada! Atualize o app para a versão 1.2.4 e confirme, por favor.
        tipo: mensagem
        privado: false
        anexos: []
    SuporteInteracaoRegistro:
      summary: Retorno do suporte após adicionar nova interação
      value:
        id: interacao-004
        autor:
          id: suporte-lucas
          nome: Lucas Prado
          papel: suporte
        tipo: mensagem
        mensagem: Correção aplicada! Atualize o app para a versão 1.2.4 e confirme, por favor.
        privado: false
        anexos: []
        createdAt: 2024-05-23T09:05:00Z
    CadernoOfflineFavoritos:
      summary: Caderno de estudo com disponibilidade offline
      value:
        id: cad-diplomacia-01
        titulo: Revisão Diplomacia Digital
        questaoIds:
          - qst-estrategia-2023-001
          - qst-redacao-2022-014
          - qst-midias-2023-010
        offlineDisponivel: true
        createdAt: 2024-05-01T14:22:00Z
        updatedAt: 2024-05-14T11:05:00Z
    CadernoInputOffline:
      summary: Payload para criar caderno com modo offline
      value:
        titulo: Revisão Diplomacia Digital
        questaoIds:
          - qst-estrategia-2023-001
          - qst-redacao-2022-014
          - qst-midias-2023-010
        offlineDisponivel: true
    CadernoListaPaginada:
      summary: Cadernos com estatuto offline
      value:
        data:
          - id: cad-diplomacia-01
            titulo: Revisão Diplomacia Digital
            questaoIds:
              - qst-estrategia-2023-001
              - qst-redacao-2022-014
              - qst-midias-2023-010
            offlineDisponivel: true
            createdAt: 2024-05-01T14:22:00Z
            updatedAt: 2024-05-14T11:05:00Z
          - id: cad-crise-urgente
            titulo: Gestão de Crises - Sprint 24h
            questaoIds:
              - qst-gestao-2023-021
              - qst-storytelling-2022-009
            offlineDisponivel: false
            createdAt: 2024-05-13T09:10:00Z
            updatedAt: 2024-05-15T08:55:00Z
        pagination:
          page: 1
          pageSize: 10
          pageCount: 1
          total: 2
    AuthLoginInput:
      summary: Credenciais de acesso para o CMS
      value:
        email: luiza.gestora@academiadacomunicacao.com
        senha: superSenha!123
        dispositivoId: ios-iphone-14-pro
    AuthLoginResponse:
      summary: Tokens JWT para sessão ativa
      value:
        tokens:
          accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.refresh...
          expiresIn: 3600
        usuario:
          id: user-gestora-luiza
          nome: Luiza Gestora
          email: luiza.gestora@academiadacomunicacao.com
          papel: admin
          permissoes:
            - usuarios:read
            - usuarios:write
            - relatorios:read
          avatarUrl: https://cdn.academiadacomunicacao.com/avatars/luiza.png
          ultimoAcesso: 2024-05-22T12:10:00Z
        requiresMfa: false
    AuthRefreshResponse:
      summary: Renovação de tokens após expiração
      value:
        tokens:
          accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.new...
          refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.refresh...
          expiresIn: 3600
    UsuarioCreateInput:
      summary: Cadastro de tutor convidado
      value:
        nome: Caio Tutor
        email: caio.tutor@academiadacomunicacao.com
        papel: tutor
        telefone: '+55 11 98888-0000'
        timezone: America/Sao_Paulo
        ativo: true
        preferencias:
          notificacoesPush: true
          modoNoturnoPadrao: true
          metasPadrao:
            questoesSemana: 120
            horasSemana: 12
        senha: Comunicacao#2024
        enviarConvite: true
    UsuarioDetalhe:
      summary: Perfil administrativo completo
      value:
        id: user-gestora-luiza
        nome: Luiza Gestora
        email: luiza.gestora@academiadacomunicacao.com
        papel: admin
        papeisSecundarios:
          - suporte
        avatarUrl: https://cdn.academiadacomunicacao.com/avatars/luiza.png
        telefone: '+55 21 97777-1111'
        timezone: America/Sao_Paulo
        ativo: true
        preferencias:
          notificacoesPush: true
          modoNoturnoPadrao: false
          metasPadrao:
            questoesSemana: 200
            horasSemana: 15
        permissoes:
          - usuarios:read
          - usuarios:write
          - relatorios:read
          - planos:write
        ultimoAcesso: 2024-05-22T12:10:00Z
        createdAt: 2024-02-01T14:20:00Z
        updatedAt: 2024-05-20T09:45:00Z
    UsuarioLista:
      summary: Página de usuários com filtros aplicados
      value:
        data:
          - id: user-gestora-luiza
            nome: Luiza Gestora
            email: luiza.gestora@academiadacomunicacao.com
            papel: admin
            ativo: true
            ultimoAcesso: 2024-05-22T12:10:00Z
          - id: user-tutor-caio
            nome: Caio Tutor
            email: caio.tutor@academiadacomunicacao.com
            papel: tutor
            ativo: true
            ultimoAcesso: 2024-05-21T18:45:00Z
          - id: user-editor-ana
            nome: Ana Editora
            email: ana.editora@academiadacomunicacao.com
            papel: editor
            ativo: false
            ultimoAcesso: 2024-04-30T11:12:00Z
        pagination:
          page: 1
          pageSize: 20
          pageCount: 1
          total: 3
    RelatorioProgressoResumo:
      summary: Evolução semanal de um aluno
      value:
        periodo:
          inicio: 2024-05-01
          fim: 2024-05-21
        totais:
          questoesResolvidas: 420
          acertos: 336
          horasEstudadas: 58.5
        evolucaoSemanal:
          - periodo: 2024-05-01/2024-05-07
            questoesResolvidas: 120
            acertos: 92
            horasEstudadas: 18.5
          - periodo: 2024-05-08/2024-05-14
            questoesResolvidas: 150
            acertos: 120
            horasEstudadas: 20.0
          - periodo: 2024-05-15/2024-05-21
            questoesResolvidas: 150
            acertos: 124
            horasEstudadas: 20.0
        topDisciplinas:
          - disciplinaId: disc-comunicacao-estrategica
            nome: Comunicação Estratégica
            acertos: 180
            aproveitamento: 0.82
          - disciplinaId: disc-midias-digitais
            nome: Mídias Digitais
            acertos: 110
            aproveitamento: 0.74
        simuladosRecentes:
          - simuladoId: sim-express-2024-05
            aproveitamento: 0.78
            concluidoEm: 2024-05-18T17:30:00Z
          - simuladoId: sim-manual-2024-01
            aproveitamento: 0.71
            concluidoEm: 2024-05-12T14:00:00Z
    RelatorioEngajamentoResumo:
      summary: Painel mensal consolidado
      value:
        referencia: 2024-05
        usuariosAtivos: 1820
        novosCadastros: 320
        conversaoTrial: 0.37
        receitaRecorrenteMensal: 98500.5
        churnMensal: 0.042
        engajamentoPorPlano:
          - planoId: plano-anual-pro
            nomePlano: Anual Pro
            usuarios: 780
            horasMedias: 12.8
          - planoId: plano-mensal-plus
            nomePlano: Mensal Plus
            usuarios: 460
            horasMedias: 9.4
        comparativoAnterior:
          usuariosAtivosDelta: 0.08
          receitaDelta: 0.11
    MentoriaListaPaginada:
      summary: Mentorias disponíveis com filtros aplicados
      value:
        data:
          - id: mentoria-estrategia-storytelling
            titulo: Storytelling para órgãos públicos
            descricao: Mentoria coletiva para estruturar narrativas estratégicas com foco em órgãos públicos.
            mentorId: mentor-ana
            modalidade: online
            duracaoMinutos: 60
            publicoAlvo: Comunicadores e gestores de comunicação institucional.
            status: publicada
            tags:
              - storytelling
              - comunicacao-publica
            slots:
              - id: slot-2024-06-10-1
                inicio: 2024-06-10T18:00:00Z
                fim: 2024-06-10T19:00:00Z
                capacidade: 8
                inscritosAtuais: 6
                status: disponivel
          - id: mentoria-midias-digitais
            titulo: Conteúdo para redes sociais institucionais
            descricao: Estratégias de produção contínua e monitoramento de KPIs digitais.
            mentorId: mentor-caio
            modalidade: hibrida
            duracaoMinutos: 75
            publicoAlvo: Times de social media do setor público.
            status: publicada
            tags:
              - midias-digitais
              - estrategia
            slots:
              - id: slot-2024-06-12-1
                inicio: 2024-06-12T13:00:00Z
                fim: 2024-06-12T14:15:00Z
                capacidade: 12
                inscritosAtuais: 11
                status: cheio
        pagination:
          page: 1
          pageSize: 10
          pageCount: 1
          total: 2
    MentoriaInputCriacao:
      summary: Payload de criação de mentoria guiada
      value:
        titulo: Storytelling para órgãos públicos
        descricao: Mentoria coletiva para estruturar narrativas estratégicas com foco em órgãos públicos.
        mentorId: mentor-ana
        modalidade: online
        duracaoMinutos: 60
        publicoAlvo: Comunicadores e gestores de comunicação institucional.
        tags:
          - storytelling
          - comunicacao-publica
        status: publicada
    MentoriaDetalhada:
      summary: Mentoria completa com disponibilidade
      value:
        id: mentoria-estrategia-storytelling
        titulo: Storytelling para órgãos públicos
        descricao: Mentoria coletiva para estruturar narrativas estratégicas com foco em órgãos públicos.
        mentorId: mentor-ana
        modalidade: online
        duracaoMinutos: 60
        publicoAlvo: Comunicadores e gestores de comunicação institucional.
        status: publicada
        tags:
          - storytelling
          - comunicacao-publica
        slots:
          - id: slot-2024-06-10-1
            inicio: 2024-06-10T18:00:00Z
            fim: 2024-06-10T19:00:00Z
            capacidade: 8
            inscritosAtuais: 6
            status: disponivel
          - id: slot-2024-06-17-1
            inicio: 2024-06-17T18:00:00Z
            fim: 2024-06-17T19:00:00Z
            capacidade: 8
            inscritosAtuais: 3
            status: disponivel
        createdAt: 2024-05-20T10:00:00Z
        updatedAt: 2024-06-01T15:30:00Z
    MentoriaSlotsDisponiveis:
      summary: Slots cadastrados para uma mentoria
      value:
        - id: slot-2024-06-10-1
          inicio: 2024-06-10T18:00:00Z
          fim: 2024-06-10T19:00:00Z
          capacidade: 8
          inscritosAtuais: 6
          status: disponivel
        - id: slot-2024-06-17-1
          inicio: 2024-06-17T18:00:00Z
          fim: 2024-06-17T19:00:00Z
          capacidade: 8
          inscritosAtuais: 3
          status: disponivel
    MentoriaSlotInput:
      summary: Payload para cadastrar novo slot
      value:
        inicio: 2024-06-24T18:00:00Z
        fim: 2024-06-24T19:00:00Z
        capacidade: 8
    MentoriaSlotAtualizado:
      summary: Slot de mentoria com status atualizado
      value:
        id: slot-2024-06-12-1
        inicio: 2024-06-12T13:00:00Z
        fim: 2024-06-12T14:15:00Z
        capacidade: 12
        inscritosAtuais: 12
        status: cheio
    MentoriaAgendamentosLista:
      summary: Agendamentos associados à mentoria
      value:
        - id: agendamento-001
          slotId: slot-2024-06-10-1
          userId: user-aluno-marina
          status: confirmado
          notas: Deseja foco em narrativas para campanhas internas.
          criadoEm: 2024-06-01T12:10:00Z
          atualizadoEm: 2024-06-02T09:45:00Z
        - id: agendamento-002
          slotId: slot-2024-06-10-1
          userId: user-aluno-rafael
          status: pendente
          notas: Participação condicionada à agenda do time de imprensa.
          criadoEm: 2024-06-02T15:20:00Z
          atualizadoEm: 2024-06-02T15:20:00Z
    MentoriaAgendamentoInput:
      summary: Payload para reservar um slot
      value:
        slotId: slot-2024-06-10-1
        userId: user-aluno-marina
        notas: Deseja foco em narrativas para campanhas internas.
    MentoriaAgendamentoConfirmado:
      summary: Agendamento confirmado de mentoria
      value:
        id: agendamento-001
        slotId: slot-2024-06-10-1
        userId: user-aluno-marina
        status: confirmado
        notas: Deseja foco em narrativas para campanhas internas.
        criadoEm: 2024-06-01T12:10:00Z
        atualizadoEm: 2024-06-02T09:45:00Z
    AgendaLivesLista:
      summary: Lista paginada de lives e eventos síncronos
      value:
        data:
          - id: live-estrategia-midias
            titulo: Estratégias para lives em órgãos públicos
            descricao: Melhores práticas para conduzir transmissões oficiais com engajamento.
            apresentador: Prof. Luiza Martins
            inicio: 2024-06-08T22:00:00Z
            fim: 2024-06-08T23:15:00Z
            linkStream: https://lives.academiadacomunicacao.com/estrategia-midias
            replayUrl: null
            capacidade: 500
            status: publicado
            tags:
              - live
              - transmissao
            inscritosAtuais: 342
            createdAt: 2024-05-25T14:00:00Z
            updatedAt: 2024-06-01T10:20:00Z
          - id: live-analise-dados
            titulo: Métricas avançadas para comunicação digital
            descricao: Interpretação de dashboards e preparação de relatórios executivos.
            apresentador: Prof. Caio Torres
            inicio: 2024-06-15T23:00:00Z
            fim: 2024-06-16T00:30:00Z
            linkStream: https://lives.academiadacomunicacao.com/metricas-digitais
            replayUrl: https://cdn.academiadacomunicacao.com/replays/metricas-digitais.mp4
            capacidade: 400
            status: publicado
            tags:
              - analytics
              - comunicacao-digital
            inscritosAtuais: 280
            createdAt: 2024-05-28T11:30:00Z
            updatedAt: 2024-06-03T08:00:00Z
        pagination:
          page: 1
          pageSize: 20
          pageCount: 1
          total: 2
    LiveEventoInput:
      summary: Payload de criação de live
      value:
        titulo: Estratégias para lives em órgãos públicos
        descricao: Melhores práticas para conduzir transmissões oficiais com engajamento.
        apresentador: Prof. Luiza Martins
        inicio: 2024-06-08T22:00:00Z
        fim: 2024-06-08T23:15:00Z
        linkStream: https://lives.academiadacomunicacao.com/estrategia-midias
        replayUrl: null
        capacidade: 500
        status: publicado
        tags:
          - live
          - transmissao
    LiveEventoDetalhe:
      summary: Live publicada com metadados completos
      value:
        id: live-estrategia-midias
        titulo: Estratégias para lives em órgãos públicos
        descricao: Melhores práticas para conduzir transmissões oficiais com engajamento.
        apresentador: Prof. Luiza Martins
        inicio: 2024-06-08T22:00:00Z
        fim: 2024-06-08T23:15:00Z
        linkStream: https://lives.academiadacomunicacao.com/estrategia-midias
        replayUrl: null
        capacidade: 500
        status: publicado
        tags:
          - live
          - transmissao
        inscritosAtuais: 342
        createdAt: 2024-05-25T14:00:00Z
        updatedAt: 2024-06-01T10:20:00Z
    LiveInscricoesLista:
      summary: Inscrições confirmadas para uma live
      value:
        - id: inscricao-001
          userId: user-aluno-marina
          status: confirmada
          inscritoEm: 2024-05-28T14:32:00Z
          updatedAt: 2024-05-28T14:32:00Z
        - id: inscricao-002
          userId: user-aluno-rafael
          status: aguardando
          inscritoEm: 2024-05-29T09:05:00Z
          updatedAt: 2024-05-29T09:05:00Z
    LiveInscricaoInput:
      summary: Payload para inscrição em live
      value:
        userId: user-aluno-marina
        status: confirmada
    LiveInscricaoConfirmada:
      summary: Inscrição confirmada para live
      value:
        id: inscricao-001
        userId: user-aluno-marina
        status: confirmada
        inscritoEm: 2024-05-28T14:32:00Z
        updatedAt: 2024-05-28T14:32:00Z
    BibliotecaMateriaisLista:
      summary: Materiais complementares com destaque para revisões
      value:
        data:
          - id: mat-guia-crise-midias
            titulo: Guia rápido de gestão de crises com a imprensa
            descricao: Checklist com etapas para controlar narrativas em situações de crise.
            formato: checklist
            arquivoUrl: https://cdn.academiadacomunicacao.com/biblioteca/guia-crise.pdf
            linkExterno: null
            thumbnailUrl: https://cdn.academiadacomunicacao.com/biblioteca/thumbnails/guia-crise.png
            duracaoMinutos: null
            disciplinaIds:
              - disc-comunicacao-institucional
            assuntoIds:
              - assunto-gestao-crises
            tags:
              - crises
              - relacionamento-midia
            destaque: true
            publicadoEm: 2024-05-28T09:00:00Z
            status: publicado
            autor:
              id: tutor-marina
              nome: Marina Costa
            downloads: 582
            visualizacoes: 1430
            createdAt: 2024-05-20T11:10:00Z
            updatedAt: 2024-05-28T09:00:00Z
          - id: mat-masterclass-storytelling
            titulo: Masterclass Storytelling governamental
            descricao: Aula em vídeo com roteiro e exemplos para discursos oficiais.
            formato: video
            arquivoUrl: https://cdn.academiadacomunicacao.com/biblioteca/masterclass-storytelling.mp4
            linkExterno: https://video.academiadacomunicacao.com/storytelling-governo
            thumbnailUrl: https://cdn.academiadacomunicacao.com/biblioteca/thumbnails/storytelling.png
            duracaoMinutos: 42
            disciplinaIds:
              - disc-narrativas-publicas
            assuntoIds:
              - assunto-storytelling
            tags:
              - storytelling
              - discurso
            destaque: false
            publicadoEm: 2024-06-01T15:30:00Z
            status: publicado
            autor:
              id: tutor-caio
              nome: Caio Torres
            downloads: 210
            visualizacoes: 980
            createdAt: 2024-05-27T18:00:00Z
            updatedAt: 2024-06-01T15:30:00Z
        pagination:
          page: 1
          pageSize: 20
          pageCount: 1
          total: 2
    MaterialBibliotecaInput:
      summary: Payload para cadastro de material complementar
      value:
        titulo: Kit de entrevista para porta-vozes
        descricao: Modelos de perguntas e roteiros para treinar porta-vozes oficiais.
        formato: checklist
        arquivoUrl: https://cdn.academiadacomunicacao.com/biblioteca/kit-entrevista.pdf
        linkExterno: null
        thumbnailUrl: https://cdn.academiadacomunicacao.com/biblioteca/thumbnails/kit-entrevista.png
        duracaoMinutos: null
        disciplinaIds:
          - disc-comunicacao-institucional
        assuntoIds:
          - assunto-entrevistas
        tags:
          - porta-voz
          - imprensa
        destaque: false
        publicadoEm: 2024-06-10T10:00:00Z
        autorId: tutor-marina
    MaterialBibliotecaDetalhe:
      summary: Material complementar publicado com estatísticas
      value:
        id: mat-guia-crise-midias
        titulo: Guia rápido de gestão de crises com a imprensa
        descricao: Checklist com etapas para controlar narrativas em situações de crise.
        formato: checklist
        arquivoUrl: https://cdn.academiadacomunicacao.com/biblioteca/guia-crise.pdf
        linkExterno: null
        thumbnailUrl: https://cdn.academiadacomunicacao.com/biblioteca/thumbnails/guia-crise.png
        duracaoMinutos: null
        disciplinaIds:
          - disc-comunicacao-institucional
        assuntoIds:
          - assunto-gestao-crises
        tags:
          - crises
          - relacionamento-midia
        destaque: true
        publicadoEm: 2024-05-28T09:00:00Z
        status: publicado
        autor:
          id: tutor-marina
          nome: Marina Costa
        downloads: 582
        visualizacoes: 1430
        createdAt: 2024-05-20T11:10:00Z
        updatedAt: 2024-05-28T09:00:00Z
    MaterialBibliotecaAtualizacao:
      summary: Exemplo de atualização parcial de material
      value:
        descricao: Versão atualizada com estudos de caso recentes.
        thumbnailUrl: https://cdn.academiadacomunicacao.com/biblioteca/thumbnails/guia-crise-v2.png
        destaque: true
        tags:
          - crises
          - relacionamento-midia
          - midia-social
        status: publicado
        autorId: tutor-marina
        publicadoEm: 2024-06-12T13:00:00Z
    RelatorioAssinaturasResumo:
      summary: Indicadores consolidados de assinaturas no período
      value:
        periodo:
          inicio: 2024-05-01
          fim: 2024-05-31
        totalAtivas: 1482
        novasAssinaturas: 320
        cancelamentos: 74
        receitaBruta:
          moeda: BRL
          montante: 212450.35
        receitaLiquida:
          moeda: BRL
          montante: 198732.12
        ticketMedio:
          moeda: BRL
          montante: 664.79
        canais:
          - canal: pix
            ativas: 910
            novas: 180
            receita:
              moeda: BRL
              montante: 146520.45
          - canal: gratis_aluno
            ativas: 340
            novas: 92
            receita:
              moeda: BRL
              montante: 0
          - canal: parceiros
            ativas: 232
            novas: 48
            receita:
              moeda: BRL
              montante: 24700.77
    RelatorioQuestoesDesempenho:
      summary: Relatório de desempenho de questões por disciplina
      value:
        periodo:
          inicio: 2024-05-20
          fim: 2024-05-26
        totais:
          respondidas: 52840
          corretas: 31245
          revisadas: 11890
        disciplinas:
          - disciplina: Português
            respondidas: 15230
            corretas: 9320
            revisadas: 3200
            acuracia: 0.612
          - disciplina: Direito Administrativo
            respondidas: 12480
            corretas: 7825
            revisadas: 2810
            acuracia: 0.627
          - disciplina: Matemática
            respondidas: 9180
            corretas: 5210
            revisadas: 2050
            acuracia: 0.568
        rankingUsuarios:
          - userId: user-aluno-marina
            respondidas: 620
            corretas: 488
            acertosPercentual: 78.71
          - userId: user-aluno-diego
            respondidas: 580
            corretas: 430
            acertosPercentual: 74.14
          - userId: user-aluno-ana
            respondidas: 545
            corretas: 418
            acertosPercentual: 76.7
    RelatorioDesafiosRanking:
      summary: Ranking consolidado de desafios colaborativos
      value:
        desafioId: desafio-coletivo-revisao-junho
        periodo:
          inicio: 2024-05-20
          fim: 2024-05-27
        participantes:
          - userId: user-aluno-marina
            pontos: 1820
            questoesResolvidas: 310
            posicao: 1
          - userId: user-aluno-diego
            pontos: 1765
            questoesResolvidas: 298
            posicao: 2
          - userId: user-aluno-ana
            pontos: 1688
            questoesResolvidas: 285
            posicao: 3
    SeedQuestoes:
      summary: Questões prontas para seed inicial
      description: |-
        Lista de questões com alternativas, estatísticas e relacionamentos
        usada para popular o ambiente de desenvolvimento.
      externalValue: ./examples/questoes.json
    SeedResolucaoQuestoes:
      summary: Resoluções de questões respondidas por alunos
      description: |-
        Logs de respostas de questões com tempo, origem e comentários para
        validar dashboards e relatórios de desempenho.
      externalValue: ./examples/resolucoes_questoes.json
    SeedPlanosPix:
      summary: Planos pagos e gratuitos com metadados Pix
      description: |-
        Payload com planos pagos e Planos Grátis para Alunos destacando a
        chave Pix copia e cola, QR Code e status de aprovação do super admin.
      externalValue: ./examples/planos.json
